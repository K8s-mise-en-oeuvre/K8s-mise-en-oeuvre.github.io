<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr">
	<title>Kubernetes, mise en oeuvre</title>
	<subtitle>Documentation website of eponym course using Zola Adidoks and Github Pages</subtitle>
	<link href="https://K8s-mise-en-oeuvre.github.io/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://K8s-mise-en-oeuvre.github.io"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-01-01T08:00:00+00:00</updated>
	<id>https://K8s-mise-en-oeuvre.github.io/atom.xml</id>
	<entry xml:lang="fr">
		<title>Annexe A</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/annexe-a/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/annexe-a/</id>
		<content type="html">&lt;h2 id=&quot;annexe-a-kubectl-command-cheatsheet&quot;&gt;Annexe A: Kubectl Command CheatSheet&lt;&#x2F;h2&gt;
&lt;p&gt;Pour lister les ressources API de Kubernetes:&lt;&#x2F;p&gt;
&lt;p&gt;``kubectl api-resources`&lt;&#x2F;p&gt;
&lt;p&gt;Pour accéder aux contextes de votre KUBECONFIG:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;kubectl config get-contexts&lt;&#x2F;code&gt; OR &lt;code&gt;kubie ctx&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pour changer de contexte:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;kubectl config use-context minikube&lt;&#x2F;code&gt; OR &lt;code&gt;kubie ctx minikube&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pouyr récupérer le nom des containers running sur le pod:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;kubectl get pod MYPOD -o &#x27;jsonpath={.spec.containers[*].name}&#x27;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pour récupérer la valeur de la clé d&#x27;un secret:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl -n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mynamespace get secret MYSECRET \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    -o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;jsonpath={.data.DB_PASSWORD}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64 -d
SuperSecretPassword
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous n&#x27;avez pas la commande base64 vous pouvez utiliser go-template:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl -n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mynamespace get secret MYSECRET \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;	-o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ‘go-template={{.data.DB_PASSWORD | base64decode}}’
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Un exemple de filtre de recherche dans jsonpath:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pod nginx \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    -o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;jsonpath={.spec.containers[?(@.name==&amp;quot;nginx&amp;quot;)].image}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx:1.9.1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour créer un secret depuis vos credentials Docker actuels pour récupérer les images depuis un registry privé:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; create secret generic SECRETNAME \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    --from-file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=.dockerconfigjson=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.docker&#x2F;config.json \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    --type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=kubernetes.io&#x2F;dockerconfigjson
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour forward le port 8080 sur le port local 8888 du poste de travail:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; port-forward MYPOD 8888:8080
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour tester des règles RBAC:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl --as&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=system:serviceaccount:MYNS:MYSA auth can-i get configmap&#x2F;MYCM
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yes
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="fr">
		<title>Gestion avancée des containers</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/containers-advanced/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/containers-advanced/</id>
		<content type="html">&lt;h2 id=&quot;gestion-avancee-des-conteneurs&quot;&gt;Gestion avancée des conteneurs&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;qu-est-ce-qu-un-container&quot;&gt;Qu&#x27;est-ce qu&#x27;un container ?&lt;&#x2F;h3&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;containers.jpg&quot; alt=&quot;containers&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Caisson métallique parallélépipédique conçu pour le transport de marchandise par différents mode de transports.
Ses dimensions ont été standardisées au niveau international et il est muni a tous les angles de pièces de préemption
permettant de l&#x27;arrimer ou de le transborder d&#x27;un véhicule a l&#x27;autre.&amp;quot; 
&lt;em&gt;Définition d&#x27;un container maritime&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Nous allons voir que ces propriétés se retrouvent dans la conception informatique du container.&lt;&#x2F;p&gt;
&lt;p&gt;C&#x27;est tout simplement faire tourner un ensemble de processus systèmes ou métier au sein d&#x27;un même environnement, isolé.&lt;&#x2F;p&gt;
&lt;p&gt;Une des problématique de la virtualisation par hyperviseur est celle de la boîte noire. Difficile de recenser l&#x27;ensemble des composants, ce qui peut être critique en cas de panne de la VM, impossible donc d&#x27;en déterminer l&#x27;état.&lt;&#x2F;p&gt;
&lt;p&gt;Comment faire également lorsque les ressources ne sont pas partagées, comme le cache des applications par exemple ? &lt;&#x2F;p&gt;
&lt;p&gt;Physiquement, un container est un système de fichiers contenant l&#x27;ensemble des binaires dont on a besoin pour faire tourner
notre application.&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;image apporte également des métadonnées rattachées aux layers dont on peut ensuite déterminer la composition exacte.&lt;&#x2F;p&gt;
&lt;p&gt;A la fin j&#x27;ai une brique atomique, je n&#x27;ai pas besoin de savoir quelles sont les couches successivement empilées du container.&lt;&#x2F;p&gt;
&lt;p&gt;Cela permet de résoudre la problématique du packaging OS (.deb, .rpm, etc.), non agnostique.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Docker on Linux&lt;&#x2F;em&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;docker-on-linux.png&quot; alt=&quot;docker-on-linux&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Les containers sont immutables, ils ne laissent rien derrière eux, ont un format autosufisant.&lt;&#x2F;p&gt;
&lt;p&gt;Les développeurs peuvent passer d&#x27;un langage a l&#x27;autre pour les applications sans jamais impacter l&#x27;infrastructure de PROD.&lt;&#x2F;p&gt;
&lt;p&gt;C&#x27;est toujours un &#x27;runner&#x27; de container tel containerd qui execute le processus sur l&#x27;hôte mais on se fiche désormais de savoir quel est le launcher sous le container (npm, shell, cargo, etc.).&lt;&#x2F;p&gt;
&lt;p&gt;Les containers amènent de l&#x27;auditabilité en production.&lt;&#x2F;p&gt;
&lt;p&gt;Autour de cette infrastructure, d&#x27;autres composants, tel un orchestrateur peuvent être intégrés.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Le container runtime est le logiciel responsable de l&#x27;exécution des conteneurs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Kubernetes est compatible avec plusieurs containers runtime: &lt;strong&gt;Docker, containerd, cri-o, rktlet ainsi que toute implémentation de Kubernetes CRI (Container Runtime Interface)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Docker and Kubernetes use containerd&lt;&#x2F;em&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;docker-and-kubernetes-use-containerd.png&quot; alt=&quot;docker-and-kubernetes-use-containerd&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;containerd-platform.png&quot; alt=&quot;containerd-plateform&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;p&gt;&lt;em&gt;Ressources supplémentaires&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Image disposant d&#x27;une binary toolbox minimaliste: &lt;a href=&quot;https:&#x2F;&#x2F;www.busybox.net&quot;&gt;Busybox&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Outil d&#x27;introspection des layers des images: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wagoodman&#x2F;dive&quot;&gt;Dive&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Demo CI dive&lt;&#x2F;em&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;demo-ci-dive.png&quot; alt=&quot;dive-demo&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Container runtime de docker: &lt;a href=&quot;https:&#x2F;&#x2F;containerd.io&quot;&gt;Containerd&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;containerd.webp&quot; alt=&quot;containerd&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;docker_containerd.png&quot; alt=&quot;docker_containerd&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;cri.png&quot; alt=&quot;CRI&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;ctr.png&quot; alt=&quot;CTR&quot; width=&quot;720&quot; height=&quot;600&quot;&gt;
&lt;h3 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Les Dockerfiles contiennent des instructions pour créer une image Docker.Chaque instruction est écrite sur une ligne et est donnée sous la forme &lt;INSTRUCTION&gt;&amp;lt;argument(s)&amp;gt;. Les fichiers Docker sont utilisés pour créer des images Docker à l&#x27;aide de la commande &lt;code&gt;docker build &lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Les principales directives pouvant être utilisées dans un Dockerfile sont:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FROM&lt;&#x2F;strong&gt; - Il s’agit de la première instruction. Elle est indispensable, car elle définit l’image de base avec le système d’exploitation et l’application portant le reste des couches. &lt;strong&gt;Vous pouvez également spécifier une image de base minimale en utilisant l’instruction &lt;code&gt;FROM scratch&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;COPY&lt;&#x2F;strong&gt; - Cette commande ajoute dans votre image des fichiers locaux ou distants tels le code source d’une application ou un fichier de configuration. Il existe aussi une commande ADD qui peut être très utile lorsque l’on veut extraire à la volée un tar.gz. ADD permet de faire ceci en une instruction alors que COPY ne permet que de copier la source vers une destination.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RUN&lt;&#x2F;strong&gt; - Exécuter avec RUN toute commande souhaitée pour créer une nouvelle couche sur l’image.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CMD&lt;&#x2F;strong&gt; - Pour spécifier une commande à exécuter seulement lors du lancement du conteneur. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;helloworld-dockerfile&quot;&gt;HelloWorld Dockerfile&lt;&#x2F;h4&gt;
&lt;p&gt;Un fichier Dockerfile minimal pourrait ressembler à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; alpine
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CMD &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello Classroom!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Cela indiquera à Docker de créer une image basée sur Alpine (FROM), une distribution minimale pour les conteneurs et d&#x27;exécuter une commande spécifique (CMD) lors de l&#x27;exécution de l&#x27;image résultante.&lt;&#x2F;p&gt;
&lt;p&gt;Construisez et exécutez-le:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; hello .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --rm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; hello

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Output
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Hello Classroom!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;creation-et-automatisation-d-images-personnalisees&quot;&gt;Création et automatisation d&#x27;images personnalisées&lt;&#x2F;h3&gt;
&lt;p&gt;Exexmple de code applicatif go:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;main

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(
	&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;net&#x2F;http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
	&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;

	&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;github.com&#x2F;labstack&#x2F;echo&#x2F;v4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
	&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;github.com&#x2F;labstack&#x2F;echo&#x2F;v4&#x2F;middleware&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() {

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;New&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;middleware&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Logger&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;())
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Use&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;middleware&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Recover&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;())

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c echo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTML&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StatusOK&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello, Docker! &amp;lt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)
	})

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;ping&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c echo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StatusOK&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Status &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OK&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;})
	})

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;httpPort &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Getenv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;HTTP_PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)
	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;httpPort &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;== &amp;quot;&amp;quot; {
		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;httpPort &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;8080&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
	}

	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Logger&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Fatal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;httpPort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;))
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Dockerfile&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# syntax=docker&#x2F;dockerfile:1

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; golang:1.16-alpine

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;WORKDIR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;app

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go.mod .&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go.sum .&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;go mod download

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; *.go .&#x2F;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;go build -o &#x2F;docker-gs-ping

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;EXPOSE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;8080

CMD [ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;docker-gs-ping&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; ]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Golang build images: &lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;language&#x2F;golang&#x2F;build-images&quot;&gt;Golang build images&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Docker multistage building: &lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;develop&#x2F;develop-images&#x2F;multistage-build&quot;&gt;Multistage building&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;deploiement-d-une-image-personnalisee&quot;&gt;Déploiement d&#x27;une image personnalisée&lt;&#x2F;h3&gt;
&lt;p&gt;Init du package applicatif golang:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mod init example.com&#x2F;echo

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; creating new go.mod: module example.com&#x2F;echo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; to add module requirements and sums:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mod tidy
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Installation des dépendances:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mod tidy

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; finding module for package github.com&#x2F;labstack&#x2F;echo&#x2F;v4&#x2F;middleware
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; finding module for package github.com&#x2F;labstack&#x2F;echo&#x2F;v4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;labstack&#x2F;echo&#x2F;v4 v4.6.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;labstack&#x2F;echo v3.3.10+incompatible
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; found github.com&#x2F;labstack&#x2F;echo&#x2F;v4 in github.com&#x2F;labstack&#x2F;echo&#x2F;v4 v4.6.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; found github.com&#x2F;labstack&#x2F;echo&#x2F;v4&#x2F;middleware in github.com&#x2F;labstack&#x2F;echo&#x2F;v4 v4.6.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading golang.org&#x2F;x&#x2F;crypto v0.0.0-20210817164053-32db794688a5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading golang.org&#x2F;x&#x2F;net v0.0.0-20210913180222-943fd674d43e
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;labstack&#x2F;gommon v0.3.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;golang-jwt&#x2F;jwt v3.2.2+incompatible
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;valyala&#x2F;fasttemplate v1.2.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading golang.org&#x2F;x&#x2F;time v0.0.0-20201208040808-7e3f01d25324
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;mattn&#x2F;go-isatty v0.0.14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;mattn&#x2F;go-colorable v0.1.11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading github.com&#x2F;valyala&#x2F;bytebufferpool v1.0.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;go:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; downloading golang.org&#x2F;x&#x2F;sys v0.0.0-20211103235746-7861aae1554b
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Build de l&#x27;image personnalisée:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --tag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; docker-gs-ping .

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[+]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Building 19.3s (12&#x2F;12) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FINISHED

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;internal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; build definition from Dockerfile                                                               0.0s
=&amp;gt; =&amp;gt; transferring &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dockerfile:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 220B                                                                               0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;internal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; .dockerignore                                                                                  0.0s
=&amp;gt; =&amp;gt; transferring &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 2B                                                                                    0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;internal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; metadata for docker.io&#x2F;library&#x2F;golang:1.16-alpine                                              8.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;internal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; build context                                                                                  0.0s
=&amp;gt; =&amp;gt; transferring &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 5.75kB                                                                                0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; docker.io&#x2F;library&#x2F;golang:1.16-alpine@sha256:c4b36cff558405c8368be606325261a21a9a3ae9f79dc1bd3fff9f  6.6s
=&amp;gt; =&amp;gt; resolve &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker.io&#x2F;library&#x2F;golang:1.16-alpine@sha256:c4b36cff558405c8368be606325261a21a9a3ae9f79dc1bd3fff9f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  0.0s
=&amp;gt; =&amp;gt; sha256:c4b36cff558405c8368be606325261a21a9a3ae9f79dc1bd3fff9f831a0411f2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1.65kB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 1.65kB                     0.0s
=&amp;gt; =&amp;gt; sha256:802b7b395fac3d9b0ed552be257a3f19739486f6e712b7f5276f76214ad1efa1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1.36kB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 1.36kB                     0.0s
=&amp;gt; =&amp;gt; sha256:4bcb0d501de3d5c9d95c65a8ef94ef2d169244bf06970413780748ac6fc7536c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;5.20kB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 5.20kB                     0.0s
=&amp;gt; =&amp;gt; sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2.82MB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 2.82MB                     0.4s
=&amp;gt; =&amp;gt; sha256:666ba61612fd7c93393f9a5bc1751d8a9929e32d51501dba691da9e8232bc87b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;282.16kB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 282.16kB                 0.2s
=&amp;gt; =&amp;gt; sha256:8ed8ca4862056a130f714accb3538decfa0663fec84e635d8b5a0a3305353dee &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;155B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 155B                         0.1s
=&amp;gt; =&amp;gt; sha256:fa6e261410ce0cebd518eb5ee56b9bb56fa66883992dc54ab7bd25afdca2b521 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;105.85MB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 105.85MB                 2.9s
=&amp;gt; =&amp;gt; sha256:033ff68f5bd26b7f1a7567e74101649886332f6bffed2928025b2dc88a49a909 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;155B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F; 155B                         0.5s
=&amp;gt; =&amp;gt; extracting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          0.3s
=&amp;gt; =&amp;gt; extracting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256:666ba61612fd7c93393f9a5bc1751d8a9929e32d51501dba691da9e8232bc87b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          0.1s
=&amp;gt; =&amp;gt; extracting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256:8ed8ca4862056a130f714accb3538decfa0663fec84e635d8b5a0a3305353dee&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          0.0s
=&amp;gt; =&amp;gt; extracting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256:fa6e261410ce0cebd518eb5ee56b9bb56fa66883992dc54ab7bd25afdca2b521&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          3.4s
=&amp;gt; =&amp;gt; extracting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256:033ff68f5bd26b7f1a7567e74101649886332f6bffed2928025b2dc88a49a909&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WORKDIR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;app                                                                                             0.3s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;3&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go.mod .&#x2F;                                                                                           0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;4&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go.sum .&#x2F;                                                                                           0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;5&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RUN&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go mod download                                                                                      1.8s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COPY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;*.go .&#x2F;                                                                                             0.0s
=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;7&#x2F;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RUN&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; go build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;docker-gs-ping                                                                          2.0s
=&amp;gt; exporting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; image                                                                                             0.5s
=&amp;gt; =&amp;gt; exporting &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;layers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                                                                                            0.5s
=&amp;gt; =&amp;gt; writing &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; sha256:d6282f70c0eed3c1f1f5c705c99c64c0aa1ac703d240630a9a0be1b437dc2025                       0.0s
=&amp;gt; =&amp;gt; naming &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; docker.io&#x2F;library&#x2F;docker-gs-ping                                                                  0.0s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run de l&#x27;image:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -it&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; docker.io&#x2F;library&#x2F;docker-gs-ping

   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;____&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    __
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; __&#x2F;___&#x2F; &#x2F;  ___
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; _&#x2F;&#x2F; __&#x2F; _ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; _ \
&#x2F;___&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;_&#x2F;_&#x2F;&#x2F;_&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;__&#x2F; v4.6.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;High&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; performance, minimalist Go web framework
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;echo.labstack.com
____________________________________O&#x2F;_______
                                    O\
⇨&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; http server started on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:8080

&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;un-conteneur-et-plusieurs-services&quot;&gt;Un conteneur et plusieurs services&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Le processus principal en cours d&#x27;exécution d&#x27;un conteneur est le ENTRYPOINT et&#x2F;ou le CMD à la fin du Dockerfile. Il est généralement recommandé de séparer les zones de préoccupation en utilisant un service par conteneur. Ce service peut être divisé en plusieurs processus (par exemple, le serveur Web Apache lance plusieurs processus de travail). Il est acceptable d&#x27;avoir plusieurs processus, mais pour tirer le meilleur parti de Docker, évitez qu&#x27;un conteneur soit responsable de plusieurs aspects de votre application globale. Vous pouvez connecter plusieurs conteneurs à l&#x27;aide de réseaux définis par l&#x27;utilisateur et de volumes partagés.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Le processus principal du conteneur est responsable de la gestion de tous les processus qu&#x27;il démarre. Dans certains cas, le processus principal n&#x27;est pas bien conçu et ne gère pas la &amp;quot;récolte&amp;quot; (l&#x27;arrêt) des processus enfants de manière élégante lorsque le conteneur sort. Si votre processus entre dans cette catégorie, vous pouvez utiliser l&#x27;option --init lorsque vous exécutez le conteneur. L&#x27;option --init insère un minuscule processus d&#x27;initialisation dans le conteneur en tant que processus principal, et gère la récupération de tous les processus à la sortie du conteneur. La gestion de ces processus de cette manière est supérieure à l&#x27;utilisation d&#x27;un processus init complet tel que sysvinit, upstart, ou systemd pour gérer le cycle de vie des processus dans votre conteneur.&lt;&#x2F;p&gt;
&lt;p&gt;Si vous devez exécuter plus d&#x27;un service dans un conteneur, vous pouvez le faire de plusieurs manières différentes.&lt;&#x2F;p&gt;
&lt;p&gt;Placez toutes vos commandes dans un script wrapper, avec des informations de test et de débogage. Exécutez le script wrapper comme votre CMD. Voici un exemple très naïf. &lt;&#x2F;p&gt;
&lt;p&gt;Tout d&#x27;abord, le script wrapper :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;bash

# Start the first process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;my_first_process &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;amp;
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start the second process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;my_second_process &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;amp;
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Wait for any process to exit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;wait &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-n
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Exit with status of process that exited first
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;exit $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Puis, le dockerfile:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# syntax=docker&#x2F;dockerfile:1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ubuntu:latest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_first_process my_first_process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_second_process my_second_process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_wrapper_script.sh my_wrapper_script.sh
CMD .&#x2F;my_wrapper_script.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous avez un processus principal qui doit démarrer en premier et rester en cours d&#x27;exécution, mais que vous avez temporairement besoin de lancer d&#x27;autres processus (peut-être pour interagir avec le processus principal), vous pouvez utiliser le contrôle des tâches de bash pour faciliter cela.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;bash
  
# turn on bash&amp;#39;s job control
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-m
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start the primary process and put it in the background
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&#x2F;my_main_process &amp;amp;
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start the helper process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;my_helper_process
  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# the my_helper_process might need to know how to wait on the
# primary process to start before it does its work and returns
  
# now we bring the primary process back into the foreground
# and leave it there
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# syntax=docker&#x2F;dockerfile:1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ubuntu:latest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_main_process my_main_process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_helper_process my_helper_process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; my_wrapper_script.sh my_wrapper_script.sh
CMD .&#x2F;my_wrapper_script.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notons toutefois que cette façon de procéder n&#x27;est que peu adaptée à une utilisation dans Kubernetes où dans une approche orientée micro-services l&#x27;on préferera 1 container pour 1 service exposé.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Sources&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;config&#x2F;containers&#x2F;multi-service_container&#x2F;&quot;&gt;Multi Service container&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creation-et-automatisation-d-images-personnalisees-tp&quot;&gt;Création et automatisation d&#x27;images personnalisées (TP)&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;partie-1&quot;&gt;Partie 1&lt;&#x2F;h4&gt;
&lt;p&gt;Dans ce TP vous aurez à charge de réaliser une image personnalisée sur la base d&#x27;un autre code applicatif (Golang&#x2F;Java&#x2F;Python,etc.) que vous souhaitez containeriser.&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;image devra être buildée et run sans erreurs.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;partie-2-facultatif&quot;&gt;Partie 2 (Facultatif)&lt;&#x2F;h4&gt;
&lt;p&gt;Étoffer votre image en rajoutant plusieurs services comme vu dans la section &amp;quot;Un conteneur et plusieurs services&amp;quot;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;partie-3-facultatif&quot;&gt;Partie 3 (Facultatif)&lt;&#x2F;h4&gt;
&lt;p&gt;Étoffer à nouveau votre image en la construisant cette fois selon les règles du multi-stage building (https:&#x2F;&#x2F;docs.docker.com&#x2F;develop&#x2F;develop-images&#x2F;multistage-build) qui visera a séparer le build du ou des binaires des processus qui seront run par l&#x27;image finale.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Déploiement d&#x27;un cluster Kubernetes </title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/deploy-k8s-cluster/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/deploy-k8s-cluster/</id>
		<content type="html">&lt;h2 id=&quot;deploiement-d-un-cluster-kubernetes&quot;&gt;Déploiement d&#x27;un cluster Kubernetes&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;deploiement-d-un-master-nodeadm-d-un-master-node-d-un-worker-node&quot;&gt;Déploiement d&#x27;un master-nodeadm, d&#x27;un master-node, d&#x27;un worker-node&lt;&#x2F;h3&gt;
&lt;p&gt;Choisissez un add-on réseau pour les pods et vérifiez s’il nécessite des arguments à passer à l&#x27;initialisation de kubeadm. &lt;strong&gt;Selon le fournisseur tiers que vous choisissez, vous devrez peut-être définir le --pod-network-cidr sur une valeur spécifique au fournisseur&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Maintenant, lancez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; init &amp;lt;args&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour plus d&#x27;informations sur les arguments de &lt;code&gt;kubeadm init&lt;&#x2F;code&gt;, voir le guide de référence kubeadm.&lt;&#x2F;p&gt;
&lt;p&gt;Pour une liste complète des options de configuration, voir la documentation du fichier de configuration.&lt;&#x2F;p&gt;
&lt;p&gt;Pour personnaliser les composants du control plane, y compris l&#x27;affectation facultative d&#x27;IPv6 à la sonde liveness, pour les composants du control plane et du serveur etcd, fournissez des arguments supplémentaires à chaque composant, comme indiqué dans les arguments personnalisés.&lt;&#x2F;p&gt;
&lt;p&gt;Pour lancer encore une fois &lt;code&gt;kubeadm init&lt;&#x2F;code&gt;, vous devez d&#x27;abord détruire le cluster.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Si vous joignez un node avec une architecture différente par rapport à votre cluster, créez un Déploiement ou DaemonSet pour kube-proxy et kube-dns sur le node. C’est nécéssaire car les images Docker pour ces composants ne prennent actuellement pas en charge la multi-architecture.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;code&gt;kubeadm init&lt;&#x2F;code&gt; exécute d’abord une série de vérifications préalables pour s’assurer que la machine est prête à exécuter Kubernetes. Ces vérifications préalables exposent des avertissements et se terminent en cas d&#x27;erreur. Ensuite kubeadm init télécharge et installe les composants du control plane du cluster. &lt;&#x2F;p&gt;
&lt;p&gt;Cela peut prendre plusieurs minutes. l&#x27;output devrait ressembler à:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[init]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Using Kubernetes version: vX.Y.Z
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[preflight]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Running pre-flight checks
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[preflight]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Pulling images required for setting up a Kubernetes cluster
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[preflight]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; This might take a minute or two, depending on the speed of your internet connection
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[preflight]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; You can also perform this action in beforehand using &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubeadm config images pull&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubelet-start]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing kubelet environment file with flags to file &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;kubeadm-flags.env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubelet-start]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing kubelet configuration to file &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;config.yaml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubelet-start]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Activating the kubelet service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Using certificateDir folder &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;pki&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;etcd&#x2F;ca&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;etcd&#x2F;server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; etcd&#x2F;server serving cert is signed for DNS names &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kubeadm-master localhost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; and IPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;10.138.0.4 127.0.0.1 ::1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;etcd&#x2F;healthcheck-client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;etcd&#x2F;peer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; etcd&#x2F;peer serving cert is signed for DNS names &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kubeadm-master localhost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; and IPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;10.138.0.4 127.0.0.1 ::1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;apiserver-etcd-client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ca&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;apiserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apiserver serving cert is signed for DNS names &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kubeadm-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; and IPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;10.96.0.1 10.138.0.4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;apiserver-kubelet-client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;front-proxy-ca&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;front-proxy-client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; certificate and key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[certs]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Generating &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; key and public key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubeconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Using kubeconfig folder &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubeconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;admin.conf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; kubeconfig file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubeconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubelet.conf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; kubeconfig file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubeconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;controller-manager.conf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; kubeconfig file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubeconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Writing &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;scheduler.conf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; kubeconfig file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Using manifest folder &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Creating static Pod manifest for &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kube-apiserver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Creating static Pod manifest for &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kube-controller-manager&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Creating static Pod manifest for &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kube-scheduler&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[etcd]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Creating static Pod manifest for local etcd in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[wait-control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Waiting for the kubelet to boot up the control plane as static Pods from directory &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;manifests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;. This can take up to 4m0s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[apiclient]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; All control plane components are healthy after 31.501735 seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[uploadconfig]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; storing the configuration used in ConfigMap &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubeadm-config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in the &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kube-system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; Namespace
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[kubelet]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Creating a ConfigMap &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubelet-config-X.Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in namespace kube-system with the configuration for the kubelets in the cluster
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[patchnode]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Uploading the CRI Socket information &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;var&#x2F;run&#x2F;dockershim.sock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; to the Node API object &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubeadm-master&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; as an annotation
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[mark-control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Marking the node kubeadm-master as control-plane by adding the label &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;node-role.kubernetes.io&#x2F;master=&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[mark-control-plane]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Marking the node kubeadm-master as control-plane by adding the taints &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;node-role.kubernetes.io&#x2F;master:NoSchedule&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[bootstrap-token]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Using token: &amp;lt;token&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;bootstrap-token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[bootstraptoken]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[bootstraptoken]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[bootstraptoken]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[bootstraptoken]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; creating the &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cluster-info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; ConfigMap in the &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kube-public&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; namespace
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[addons]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Applied essential addon: CoreDNS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[addons]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Applied essential addon: kube-proxy

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Your&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Kubernetes master has initialized successfully!

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;To&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; start using your cluster, you need to run the following as a regular user:

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; cp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube&#x2F;config
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; chown $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;id -u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;):$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;id -g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube&#x2F;config

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; should now deploy a pod network to the cluster.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubectl apply -f [podnetwork].yaml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; with one of the options listed at:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;kubernetes.io&#x2F;fr&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;

You&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; can now join any number of machines by running the following on each node
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;as&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; root:

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; join &amp;lt;master-ip&amp;gt;:&amp;lt;master-port&amp;gt; --token &amp;lt;token&amp;gt; --discovery-token-ca-cert-hash sha256:&amp;lt;hash&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour que kubectl fonctionne pour votre utilisateur non root, exécutez ces commandes, qui font également partie du resultat de la commande &lt;code&gt;kubeadm init&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; cp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube&#x2F;config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; chown $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;id -u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;):$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;id -g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.kube&#x2F;config
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Alternativement, si vous êtes root, vous pouvez exécuter:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KUBECONFIG&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Faites un enregistrement du retour de la commande &lt;code&gt;kubeadm join&lt;&#x2F;code&gt; que &lt;code&gt;kubeadm init&lt;&#x2F;code&gt; génère. Vous avez besoin de cette commande pour joindre des nodes à votre cluster.&lt;&#x2F;p&gt;
&lt;p&gt;Le token est utilisé pour l&#x27;authentification mutuelle entre le master et les nœuds qui veulent le rejoindre. Le token est secret. Gardez-le en sécurité, parce que n&#x27;importe qui avec ce token peut ajouter des node authentifiés à votre cluster. Ces tokens peuvent être listés, créés et supprimés avec la commande &lt;code&gt;kubeadm token&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mise-en-place-du-dashboard-et-du-reseau&quot;&gt;Mise en place du dashboard et du réseau&lt;&#x2F;h3&gt;
&lt;p&gt;Vous devez installer un add-on réseau pour pod afin que vos pods puissent communiquer les uns avec les autres.&lt;&#x2F;p&gt;
&lt;p&gt;Le réseau doit être déployé avant toute application. De plus, CoreDNS ne démarrera pas avant l’installation d’un réseau. kubeadm ne prend en charge que les réseaux basés sur un CNI (et ne prend pas en charge kubenet).&lt;&#x2F;p&gt;
&lt;p&gt;Plusieurs projets fournissent des réseaux de pod Kubernetes utilisant CNI, dont certains supportent les network policies. Allez voir la page des add-ons pour une liste complète des add-ons réseau disponibles.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Le support IPv6 a été ajouté dans CNI v0.6.0.
CNI bridge et local-ipam sont les seuls plug-ins de réseau IPv6 pris en charge dans Kubernetes version 1.9.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Notez que kubeadm configure un cluster sécurisé par défaut et impose l’utilisation de RBAC. Assurez-vous que votre manifeste de réseau prend en charge RBAC.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Veuillez également à ce que votre réseau Pod ne se superpose à aucun des réseaux hôtes, car cela pourrait entraîner des problèmes. Si vous constatez une collision entre le réseau de pod de votre plug-in de réseau et certains de vos réseaux hôtes, vous devriez penser à un remplacement de CIDR approprié et l&#x27;utiliser lors de &lt;code&gt;kubeadm init&lt;&#x2F;code&gt; avec &lt;code&gt;--pod-network-cidr&lt;&#x2F;code&gt; et en remplacement du YAML de votre plugin réseau. &lt;&#x2F;p&gt;
&lt;p&gt;Vous ne pouvez installer qu&#x27;un seul réseau de pod par cluster.&lt;&#x2F;p&gt;
&lt;p&gt;Choisissez-en un parmi les suivants:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Calico&lt;&#x2F;li&gt;
&lt;li&gt;Canal&lt;&#x2F;li&gt;
&lt;li&gt;Cilium&lt;&#x2F;li&gt;
&lt;li&gt;Flannel&lt;&#x2F;li&gt;
&lt;li&gt;Kube-router&lt;&#x2F;li&gt;
&lt;li&gt;Romana&lt;&#x2F;li&gt;
&lt;li&gt;Weave Net&lt;&#x2F;li&gt;
&lt;li&gt;JuniperContrail&#x2F;TungstenFabric&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Pour notre part nous ferons le choix de Calico qui est majoritairement utilisé.&lt;&#x2F;p&gt;
&lt;p&gt;Pour plus d&#x27;informations sur l&#x27;utilisation de Calico, voir Guide de démarrage rapide de Calico sur Kubernetes, Installation de Calico pour les netpols (network policies) et le réseau, ainsi que d&#x27;autres resources liées à ce sujet.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;projectcalico.docs.tigera.io&#x2F;getting-started&#x2F;kubernetes&#x2F;quickstart&quot;&gt;Quickstart Calico on K8s&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.calicolabs.com&#x2F;&quot;&gt;Calico Home&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pour que Calico fonctionne correctement, vous devez passer &lt;strong&gt;--pod-network-cidr = 192.168.0.0 &#x2F; 16 à kubeadm init ou mettre à jour le fichier calico.yml pour qu&#x27;il corresponde à votre réseau de Pod.&lt;&#x2F;strong&gt; Notez que Calico fonctionne uniquement sur amd64, arm64, ppc64le et s390x.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;v3.8&#x2F;manifests&#x2F;calico.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Une fois qu&#x27;un réseau de pod a été installé, vous pouvez vérifier qu&#x27;il fonctionne en vérifiant que le pod CoreDNS est en cours d’exécution&lt;&#x2F;strong&gt; dans l&#x27;output de &lt;code&gt;kubectl get pods --all-namespaces&lt;&#x2F;code&gt;. Et une fois que le pod CoreDNS est opérationnel, vous pouvez continuer en joignant vos nœuds.&lt;&#x2F;p&gt;
&lt;p&gt;Si votre réseau ne fonctionne pas ou si CoreDNS n&#x27;est pas en cours d&#x27;exécution, vérifiez notre documentation de dépannage.&lt;&#x2F;p&gt;
&lt;p&gt;Par défaut, votre cluster ne déploie pas de pods sur le master pour des raisons de sécurité. Si vous souhaitez pouvoir déployer des pods sur le master, par exemple, pour un cluster Kubernetes mono-machine pour le développement, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; taint nodes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --all&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; node-role.kubernetes.io&#x2F;master-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test-01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; untainted
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;taint &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;node-role.kubernetes.io&#x2F;master:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; not found
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;taint &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;node-role.kubernetes.io&#x2F;master:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; not found
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Cela supprimera la marque &lt;strong&gt;node-role.kubernetes.io&#x2F;master&lt;&#x2F;strong&gt; de tous les nodes qui l&#x27;ont, y compris du node master, ce qui signifie que le scheduler sera alors capable de déployer des pods partout.&lt;&#x2F;p&gt;
&lt;p&gt;Les nodes sont ceux sur lesquels vos workloads (conteneurs, pods, etc.) sont exécutés. Pour ajouter de nouveaux nodes à votre cluster, procédez comme suit pour chaque machine:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SSH vers la machine&lt;&#x2F;li&gt;
&lt;li&gt;Devenir root (par exemple, &lt;code&gt;sudo su-&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Exécutez la commande qui a été récupérée sur l&#x27;output de &lt;code&gt;kubeadm init&lt;&#x2F;code&gt;. &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Par exemple:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; join&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;token&amp;gt; &amp;lt;master-ip&amp;gt;:&amp;lt;master-port&amp;gt; --discovery-token-ca-cert-hash sha256:&amp;lt;hash&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous n&#x27;avez pas le jeton, vous pouvez l&#x27;obtenir en exécutant la commande suivante sur le node master:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; token list
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Par défaut, les jetons expirent après 24 heures. Si vous joignez un node au cluster après l’expiration du jeton actuel, vous pouvez créer un nouveau jeton en exécutant la commande suivante sur le node master:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; token create

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;5didvk.d09sbcov8ph2amjw
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous n&#x27;avez pas la valeur &lt;strong&gt;--discovery-token-ca-cert-hash&lt;&#x2F;strong&gt;, vous pouvez l&#x27;obtenir en exécutant la suite de commande suivante sur le node master:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openssl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; x509&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -pubkey -in&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openssl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; rsa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -pubin -outform&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; der &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;&#x2F;dev&#x2F;null | \
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openssl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; dgst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -sha256 -hex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;s&#x2F;^.* &#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;8cb2de97839780a412b93877f8507ad6c94f73add17d5d7058e91741c9d5ec78

[preflight]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Running pre-flight checks

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; (log output of join workflow) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;...

Node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; join complete:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Certificate signing request sent to master and response
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;received.
*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Kubelet informed of new secure connection details.

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubectl get nodes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; on the master to see this machine join.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Quelques secondes plus tard, vous remarquerez ce node dans l&#x27;output de &lt;code&gt;kubectl get nodes&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Enfin, nous allons installer la dashboard UI:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.4.0&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;deploiement-d-un-cluster-tp&quot;&gt;Déploiement d&#x27;un cluster (TP)&lt;&#x2F;h3&gt;
&lt;p&gt;Dans ce TP vous aurez à charge de spawner un cluster avec kubeadm&#x2F;eksctl ou les 2 sur un environnement AWS.&lt;&#x2F;p&gt;
&lt;p&gt;Nous devrons au prélable nous assurer de l&#x27;existence de 3 VM accessibles.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;installation-manuelle-avec-kubeadm&quot;&gt;Installation manuelle avec kubeadm&lt;&#x2F;h4&gt;
&lt;p&gt;Suivez les étapes de la documentation ci-dessous &lt;a href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;production-environment&#x2F;tools&#x2F;kubeadm&#x2F;create-cluster-kubeadm&#x2F;&quot;&gt;Create cluster from scratch with kubeadm&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Puis, valider le bon fonctionnement suite à l&#x27;installation.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;controlplane&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; $ kubectl cluster-info

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Kubernetes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; master is running at https:&#x2F;&#x2F;172.17.0.10:6443
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KubeDNS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; is running at https:&#x2F;&#x2F;172.17.0.10:6443&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;services&#x2F;kube-dns:dns&#x2F;proxy

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Validate resources visibility after installation
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kubectl get pods&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --all-namespaces -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; wide
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Enfin, détruisez le cluster:&lt;&#x2F;p&gt;
&lt;p&gt;Pour annuler ce que kubeadm a fait, vous devez d’abord drainer le node et assurez-vous que le node est vide avant de l&#x27;arrêter. &lt;&#x2F;p&gt;
&lt;p&gt;En communiquant avec le master en utilisant les informations d&#x27;identification appropriées, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; drain &amp;lt;node name&amp;gt; --delete-local-data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --force --ignore-daemonsets
kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete node &amp;lt;node name&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ensuite, sur le node en cours de suppression, réinitialisez l&#x27;état de tout ce qui concerne kubeadm:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; reset
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Le processus de réinitialisation ne réinitialise pas et ne nettoie pas les règles iptables ni les tables IPVS. Si vous souhaitez réinitialiser iptables, vous devez le faire manuellement:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;iptables -F &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;iptables -t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; nat&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -F &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;iptables -t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mangle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -F &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;iptables -X
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous souhaitez réinitialiser les tables IPVS, vous devez exécuter la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ipvsadm -C
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous souhaitez recommencer Il suffit de lancer &lt;code&gt;kubeadm init&lt;&#x2F;code&gt; ou &lt;code&gt;kubeadm join&lt;&#x2F;code&gt; avec les arguments appropriés.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;installation-sur-aws-eks-avec-eksctl&quot;&gt;Installation sur AWS EKS avec eksctl&lt;&#x2F;h4&gt;
&lt;p&gt;Plusieurs types de configuration pour les nodes qui seront spawn pour l&#x27;installation du cluster:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fargate - Linux - Sélectionnez ce type de node si vous souhaitez exécuter des applications Linux sur AWS Fargate. Fargate est un moteur de calcul sans serveur qui vous permet de déployer des pods Kubernetes sans gérer les instances Amazon EC2.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;nodes gérés - Linux - sélectionnez ce type de node si vous souhaitez exécuter des applications Amazon Linux sur des instances Amazon EC2. Bien que cela ne soit pas abordé dans ce guide, vous pouvez également ajouter des nodes autogérés et Bottlerocket Windows à votre cluster.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h5 id=&quot;installation-d-eksctl&quot;&gt;Installation d&#x27;eksctl&lt;&#x2F;h5&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl --silent --location &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;weaveworks&#x2F;eksctl&#x2F;releases&#x2F;latest&#x2F;download&#x2F;eksctl_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)_amd64.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; xz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -C&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;tmp

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mv &#x2F;tmp&#x2F;eksctl &#x2F;usr&#x2F;local&#x2F;bin
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h5 id=&quot;creation-d-un-cluster-avec-eksctl-sur-des-nodes-de-type-fargate&quot;&gt;Création d&#x27;un cluster avec eksctl sur des nodes de type fargate&lt;&#x2F;h5&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;eksctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; create cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --region&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; us-east-2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --fargate

2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  eksctl version 0.76.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  using region us-east-2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  setting availability zones to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;us-east-2a us-east-2b us-east-2c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  subnets for us-east-2a - public:192.168.0.0&#x2F;19 private:192.168.96.0&#x2F;19
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  subnets for us-east-2b - public:192.168.32.0&#x2F;19 private:192.168.128.0&#x2F;19
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  subnets for us-east-2c - public:192.168.64.0&#x2F;19 private:192.168.160.0&#x2F;19
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  using Kubernetes version 1.21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  creating EKS cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;us-east-2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; region with Fargate profile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  if you encounter any issues, check CloudFormation console or try &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl utils describe-stacks --region=us-east-2 --cluster=kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  CloudWatch logging will not be enabled for cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;us-east-2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  you can enable it with &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=us-east-2 --cluster=kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;us-east-2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; sequential tasks: { create cluster control plane &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;,
    2 sequential sub-tasks: {
        wait for control plane to become ready,
        create fargate profiles,
    }
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  building cluster stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:14 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  deploying stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:35:44 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:36:14 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:37:15 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:38:15 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:39:16 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:40:16 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:41:16 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:42:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:43:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:44:18 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:45:18 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:46:19 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:47:19 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:48:19 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for CloudFormation stack &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eksctl-kolorado-cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:50:22 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  creating Fargate profile &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fp-default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; on EKS cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:54:41 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  created Fargate profile &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fp-default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; on EKS cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:57:13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;coredns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; is now schedulable onto Fargate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;coredns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; is now scheduled onto Fargate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;coredns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; pods are now scheduled onto Fargate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  waiting for the control plane availability...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;✔&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  saved kubeconfig as &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;pbackz&#x2F;.kube&#x2F;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  no tasks
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;✔&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  all EKS cluster resources for &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; have been created
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:19 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ℹ&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  kubectl command should work with &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;pbackz&#x2F;.kube&#x2F;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, try &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubectl get nodes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2021-12-14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 02:58:19 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;✔&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  EKS cluster &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;us-east-2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; region is ready
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Validate resources visibility after installation
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pods&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --all-namespaces -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; wide

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Show config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kubectl config view
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
clusters&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;certificate-authority-data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DATA+OMITTED
    server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;D574D5657EED6B65990285B60D420EBB.gr7.us-east-2.eks.amazonaws.com
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolorado.us-east-2.eksctl.io
contexts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolorado.us-east-2.eksctl.io
    user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolo@kolorado.us-east-2.eksctl.io
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolo@kolorado.us-east-2.eksctl.io
current-context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolo@kolorado.us-east-2.eksctl.io
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Config
preferences&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: {}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolo@kolorado.us-east-2.eksctl.io
  user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;client.authentication.k8s.io&#x2F;v1alpha1
      args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;eks
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get-token
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--cluster-name
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kolorado
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--region
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;us-east-2
      command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;aws
      env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AWS_STS_REGIONAL_ENDPOINTS
        value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;regional
      interactiveMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IfAvailable
      provideClusterInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Puis détruire le cluster:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Delete cluster
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;eksctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete cluster&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kolorado&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --region&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; us-east-2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;weaveworks&#x2F;eksctl&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;eksctl examples&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Les fichiers descriptifs</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/description-files/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/description-files/</id>
		<content type="html">&lt;h2 id=&quot;les-fichiers-descriptifs&quot;&gt;Les fichiers descriptifs&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;syntaxe-yaml&quot;&gt;Syntaxe YAML&lt;&#x2F;h3&gt;
&lt;p&gt;Le YAML, qu&#x27;est-ce que c&#x27;est ?&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;YAML, acronyme de Yet Another Markup Language dans sa version 1.01, devient l&#x27;acronyme récursif de YAML Ain&#x27;t Markup Language (« YAML n’est pas un langage de balisage ») dans sa version 1.12, est un format de représentation de données par sérialisation Unicode. Il reprend des concepts d&#x27;autres langages comme XML, ou encore du format de message électronique tel que documenté par RFC 2822. YAML a été proposé par Clark Evans en 20013, et implémenté par ses soins ainsi que par Brian Ingerson et Oren Ben-Kiki.
Son objet est de représenter des informations plus élaborées que le simple CSV en gardant cependant une lisibilité presque comparable, et bien plus grande en tout cas que du XML.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Source&lt;&#x2F;em&gt; &lt;a href=&quot;https:&#x2F;&#x2F;fr.wikipedia.org&#x2F;wiki&#x2F;YAML&quot;&gt;YAML definition&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;essentiel de la syntaxe YAML:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# document start

# Comments in YAML look like this.

################
# SCALAR TYPES #
################

# Our root object (which continues for the entire document) will be a map,
# which is equivalent to a dictionary, hash or object in other languages.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;value
another_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Another value goes here.
a_number_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scientific_notation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1e+12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# The number 1 will be interpreted as a number, not a boolean. if you want
# it to be interpreted as a boolean, use true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;boolean&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;null_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key with spaces&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;value
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Notice that strings don&amp;#39;t need to be quoted. However, they can be.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;however&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;A string, enclosed in quotes.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Keys can be quoted too.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Useful if you want to put a &amp;#39;:&amp;#39; in your key.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;single quotes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;have &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;one&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; escape pattern&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;double quotes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;have many: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\u263A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\x0d\x0a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; == &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\r\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, and more.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# UTF-8&#x2F;16&#x2F;32 characters need to be encoded
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Superscript two&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\u00B2

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Multiple-line strings can be written either as a &amp;#39;literal block&amp;#39; (using |),
# or a &amp;#39;folded block&amp;#39; (using &amp;#39;&amp;gt;&amp;#39;).
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;literal_block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    This entire block of text will be the value of the &amp;#39;literal_block&amp;#39; key,
    with line breaks being preserved.

    The literal continues until de-dented, and the leading indentation is
    stripped.

        Any lines that are &amp;#39;more-indented&amp;#39; keep the rest of their indentation -
        these lines will be indented by 4 spaces.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;folded_style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    This entire block of text will be the value of &amp;#39;folded_style&amp;#39;, but this
    time, all newlines will be replaced with a single space.

    Blank lines, like above, are converted to a newline character.

        &amp;#39;More-indented&amp;#39; lines keep their newlines, too -
        this text will appear over two lines.

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;####################
# COLLECTION TYPES #
####################

# Nesting uses indentation. 2 space indent is preferred (but not required).
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a_nested_map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;value
  another_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Another Value
  another_nested_map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hello&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;hello

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Maps don&amp;#39;t have to have string keys.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;a float key

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Keys can also be complex, like multi-line objects
# We use ? followed by a space to indicate the start of a complex key.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;  This is a key
  that has multiple lines
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;and this is its value

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# YAML also allows mapping between sequences with the complex key syntax
# Some language parsers might complain
# An example
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;? - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Manchester United
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Real Madrid
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2001-01-01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2002-02-02&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Sequences (equivalent to lists or arrays) look like this
# (note that the &amp;#39;-&amp;#39; counts as indentation):
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a_sequence&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Item 1
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Item 2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# sequences can contain disparate types.
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Item 4
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;value
    another_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;another_value
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;-
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;This is a sequence
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;inside another sequence
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- - - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Nested sequence indicators
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;can be collapsed

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Since YAML is a superset of JSON, you can also write JSON-style maps and
# sequences:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json_map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json_seq&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;takeoff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;and quotes are optional&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;takeoff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#######################
# EXTRA YAML FEATURES #
#######################

# YAML also has a handy feature called &amp;#39;anchors&amp;#39;, which let you easily duplicate
# content across your document. Both of these keys will have the same value:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchored_content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;anchor_name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;This string will appear as the value of two keys.
other_anchor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchor_name

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Anchors can be used to duplicate&#x2F;inherit properties
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;base
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Everyone has same name

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# The regexp &amp;lt;&amp;lt; is called Merge Key Language-Independent Type. It is used to
# indicate that all the keys of one or more specified maps should be inserted
# into the current map.

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base
  age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base
  age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;20

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# foo and bar would also have name: Everyone has same name

# YAML also has tags, which you can use to explicitly declare types.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;explicit_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;!!str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Some parsers implement language specific tags, like this one for Python&amp;#39;s
# complex number type.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python_complex_number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;!!python&#x2F;complex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1+2j

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# We can also use yaml complex keys with language specific tags
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;!!python&#x2F;tuple &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]
: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Fifty Seven
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Would be {(5, 7): &amp;#39;Fifty Seven&amp;#39;} in Python

####################
# EXTRA YAML TYPES #
####################

# Strings and numbers aren&amp;#39;t the only scalars that YAML can understand.
# ISO-formatted date and datetime literals are also parsed.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;datetime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2001-12-15T02:59:43.1Z
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;datetime_with_spaces&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2001-12-14 21:59:43.10 -5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2002-12-14

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# The !!binary tag indicates that a string is actually a base64-encoded
# representation of a binary blob.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gif_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;!!binary |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;  R0lGODlhDAAMAIQAAP&#x2F;&#x2F;9&#x2F;X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5
  OTk6enp56enmlpaWNjY6Ojo4SEhP&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;+
  +f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++f&#x2F;++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC
  AgjoEwnuNAFOhpEMTRiggcz4BNJHrv&#x2F;zCFcLiwMWYNG84BwwEeECcgggoBADs=

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# YAML also has a set type, which looks like this:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  ? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item1
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item3
or&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#bf616a;color:#2b303b;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;item1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;item2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;item3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Sets are just maps with null values; the above is equivalent to:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;...  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# document end
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Source&lt;&#x2F;em&gt; &lt;a href=&quot;https:&#x2F;&#x2F;learnxinyminutes.com&#x2F;docs&#x2F;yaml&#x2F;&quot;&gt;Learn YAML in 10 minutes&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scalabilite-d-un-deploiement&quot;&gt;Scalabilité d&#x27;un déploiement&lt;&#x2F;h3&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;scaling-kubernetes-in.png&quot; alt=&quot;scaling-kubernetes-in&quot; width=&quot;580&quot; height=&quot;400&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;scaling-kubernetes-out.png&quot; alt=&quot;scaling-kubernetes-out&quot; width=&quot;700&quot; height=&quot;520&quot;&gt;
&lt;p&gt;Vous pouvez mettre à l&#x27;échelle un déploiement en utilisant la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; scale deployment&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --replicas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=10

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; scaled
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;En supposant que l&#x27;autoscaling horizontal des pods est activé dans votre cluster, &lt;strong&gt;vous pouvez configurer un autoscaler pour votre déploiement&lt;&#x2F;strong&gt; et choisir le nombre minimum et maximum de pods que vous souhaitez exécuter en fonction de l&#x27;utilisation du CPU de vos pods existants.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; autoscale deployment&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --max&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --cpu-percent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=80

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; scaled
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Les déploiements RollingUpdate permettent d&#x27;exécuter plusieurs versions d&#x27;une application en même temps. 
Lorsque vous ou un autoscaler mettez à l&#x27;échelle un déploiement RollingUpdate qui est au milieu d&#x27;un déploiement (en cours ou en pause), le contrôleur de déploiement équilibre les replicas supplémentaires dans les ReplicaSets actifs existants (ReplicaSets avec Pods) afin d&#x27;atténuer le risque. &lt;&#x2F;p&gt;
&lt;p&gt;C&#x27;est ce qu&#x27;on appelle la mise à l&#x27;échelle proportionnelle.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, vous exécutez un déploiement avec 10 replicas, maxSurge=3 et maxUnavailable=2.&lt;&#x2F;p&gt;
&lt;p&gt;Assurez-vous que les 10 replicas de votre déploiement sont running.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get deploy

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     10        10        10           10          50s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Vous effectuez une mise à jour vers une nouvelle image qui se trouve être non résoluble depuis l&#x27;intérieur du cluster.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; set image deployment&#x2F;nginx-deployment nginx=nginx:sometag

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; image updated
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;La mise à jour de l&#x27;image lance un nouveau déploiement avec ReplicaSet nginx-deployment-1989198191, mais il est bloqué en raison de l&#x27;exigence maxUnavailable que vous avez mentionnée ci-dessus. &lt;&#x2F;p&gt;
&lt;p&gt;Vérifiez l&#x27;état du déploiement.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get rs

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          DESIRED   CURRENT   READY     AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1989198191&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   5         5         0         9s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-618515232&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    8         8         8         1m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Puis une nouvelle demande de mise à l&#x27;échelle pour que le déploiement arrive. 
L&#x27;autoscaler incrémente les replicas du déploiement à 15. Le contrôleur de déploiement doit décider où ajouter ces 5 nouveaux replicas. &lt;&#x2F;p&gt;
&lt;p&gt;Si vous n&#x27;utilisiez pas la mise à l&#x27;échelle proportionnelle, les 5 replicas seraient ajoutés dans le nouveau ReplicaSet. Avec la mise à l&#x27;échelle proportionnelle, vous répartissez les replicas supplémentaires sur tous les ReplicaSets. 
Les proportions les plus importantes vont aux ReplicaSets ayant le plus de replicas et les proportions les plus faibles vont aux ReplicaSets ayant moins de replicas. Les restes sont ajoutés au ReplicaSet ayant le plus de replicas. &lt;&#x2F;p&gt;
&lt;p&gt;Les ReplicaSets avec zéro replica ne sont pas mis à l&#x27;échelle.&lt;&#x2F;p&gt;
&lt;p&gt;Dans notre exemple ci-dessus, 3 replicas sont ajoutées à l&#x27;ancien ReplicaSet et 2 replicas sont ajoutées au nouveau ReplicaSet. Le processus de déploiement devrait finalement déplacer toutes les replicas vers le nouveau ReplicaSet, en supposant que les nouveaux replicas soient valides. &lt;&#x2F;p&gt;
&lt;p&gt;Pour confirmer cela, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get deploy

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     15        18        7            8           7m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Le statut de déploiement confirme comment les replicas ont été ajoutés à chaque ReplicaSet.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get rs

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          DESIRED   CURRENT   READY     AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1989198191&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   7         7         0         7m
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-618515232&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    11        11        11        7m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;strategie-de-mise-a-jour-sans-interruption&quot;&gt;Stratégie de mise à jour sans interruption&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Le re-déploiement d&#x27;un déploiement est déclenché si et seulement si le modèle de pod du déploiement (c&#x27;est-à-dire &lt;strong&gt;.spec.template&lt;&#x2F;strong&gt;) est modifié, par exemple si les labels ou les images de conteneur du template sont mis à jour. D&#x27;autres mises à jour, telles que la mise à l&#x27;échelle du déploiement, ne déclenchent pas de rollout.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Suivez les étapes ci-dessous pour mettre à jour votre déploiement:&lt;&#x2F;p&gt;
&lt;p&gt;Mettons à jour les pods nginx pour utiliser l&#x27;image nginx: 1.9.1 au lieu de l&#x27;image nginx: 1.7.9.&lt;&#x2F;p&gt;
&lt;p&gt;kubectl --record deployment.apps&#x2F;nginx-deployment set image deployment.v1.apps&#x2F;nginx-deployment nginx=nginx:1.9.1&lt;&#x2F;p&gt;
&lt;p&gt;ou utilisez la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; set image deployment&#x2F;nginx-deployment nginx=nginx:1.9.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --record

deployment.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; image updated
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Alternativement, vous pouvez éditer le déploiement et changer &lt;code&gt;.spec.template.spec.containers[0].image&lt;&#x2F;code&gt; de &#x27;nginx: 1.7.9&#x27; à &#x27;nginx: 1.9.1&#x27;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; edit deployment.v1.apps&#x2F;nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; edited
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour voir l&#x27;état du déploiement, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; rollout status deployment.v1.apps&#x2F;nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Waiting&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; for rollout to finish: 2 out of 3 new replicas have been updated...

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# OR

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; successfully rolled out
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Obtenez plus de détails sur votre déploiement mis à jour:&lt;&#x2F;p&gt;
&lt;p&gt;Une fois le déploiement réussi, vous pouvez afficher le déploiement en exécutant &lt;code&gt;kubectl get deployments.&lt;&#x2F;code&gt; La sortie est similaire à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               READY   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   3&#x2F;3     3            3           36s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Exécutez kubectl get rs pour voir que le déploiement a mis à jour les pods en créant un nouveau ReplicaSet et en le redimensionnant jusqu&#x27;à 3 replicas, ainsi qu&#x27;en réduisant l&#x27;ancien ReplicaSet à 0 réplicas.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get rs

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          DESIRED   CURRENT   READY   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1564180365&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   3         3         3       6s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-2035384211&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   0         0         0       36s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;L&#x27;exécution de &lt;code&gt;kubectl get pods&lt;&#x2F;code&gt; ne devrait désormais afficher que les nouveaux pods:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                                READY     STATUS    RESTARTS   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1564180365-khku8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          14s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1564180365-nacti&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          14s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-1564180365-z9gth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          14s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;La prochaine fois que vous souhaitez mettre à jour ces pods, il vous suffit de mettre à jour le modèle de pod de déploiement à nouveau.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Le déploiement garantit que seul un certain nombre de pods sont en panne pendant leur mise à jour. Par défaut, il garantit qu&#x27;au moins 75% du nombre souhaité de pods sont en place (25% max indisponible).&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Le déploiement garantit également que seul un certain nombre de pods sont créés au-dessus du nombre souhaité de pods. &lt;strong&gt;Par défaut, il garantit qu&#x27;au plus 125% du nombre de pods souhaité sont en hausse (surtension maximale de 25%).&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, si vous regardez attentivement le déploiement ci-dessus, vous verrez qu&#x27;il a d&#x27;abord créé un nouveau pod, puis supprimé certains anciens pods et en a créé de nouveaux. Il ne tue pas les anciens Pods tant qu&#x27;un nombre suffisant de nouveaux Pods n&#x27;est pas apparu, et ne crée pas de nouveaux Pods tant qu&#x27;un nombre suffisant de Pods anciens n&#x27;a pas été tué. Il s&#x27;assure qu&#x27;au moins 2 pods sont disponibles et qu&#x27;au maximum 4 pods au total sont disponibles.&lt;&#x2F;p&gt;
&lt;p&gt;Obtenez les détails de votre déploiement:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; describe deployments

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Name:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                   nginx-deployment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Namespace:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;              default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CreationTimestamp:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;      Thu, 30 Nov 2021 10:56:25 +0000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Labels:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                 app=nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Annotations:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;            deployment.kubernetes.io&#x2F;revision=2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Selector:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               app=nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Replicas:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               3 desired | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; updated | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; total | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; available | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; unavailable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StrategyType:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           RollingUpdate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;MinReadySeconds:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RollingUpdateStrategy:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  25% max unavailable, 25% max surge
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Template:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Labels:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  app=nginx
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Containers:
    nginx:
        Image:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        nginx:1.9.1
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;         80&#x2F;TCP
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Environment:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;none&amp;gt;
        Mounts:       &amp;lt;none&amp;gt;
    Volumes:        &amp;lt;none&amp;gt;
    Conditions:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           Status  Reason
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;----&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           ------  ------
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Available&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;      True    MinimumReplicasAvailable
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Progressing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    True    NewReplicaSetAvailable
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OldReplicaSets:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;none&amp;gt;
    NewReplicaSet:   nginx-deployment-1564180365 (3&#x2F;3 replicas created)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Events:
    Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    Reason             Age   From                   Message
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;----&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    ------             ----  ----                   -------
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  2m    deployment-controller  Scaled up replica set nginx-deployment-2035384211 to 3
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  24s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 1
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  22s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 2
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  22s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 2
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  19s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 1
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  19s   deployment-controller  Scaled up replica set nginx-deployment-1564180365 to 3
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet  14s   deployment-controller  Scaled down replica set nginx-deployment-2035384211 to 0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ici, vous voyez que lorsque vous avez créé le déploiement pour la première fois, il a créé un ReplicaSet (nginx-deployment-2035384211) et l&#x27;a mis à l&#x27;échelle directement jusqu&#x27;à 3 replicas. &lt;&#x2F;p&gt;
&lt;p&gt;Lorsque vous avez mis à jour le déploiement, il a créé un nouveau ReplicaSet (nginx-deployment-1564180365) et l&#x27;a mis à l&#x27;échelle jusqu&#x27;à 1, puis a réduit l&#x27;ancien ReplicaSet à 2, de sorte qu&#x27;au moins 2 pods étaient disponibles et au plus 4 pods ont été créés à chaque fois. &lt;&#x2F;p&gt;
&lt;p&gt;Il a ensuite poursuivi la montée en charge du nouveau et de l&#x27;ancien ReplicaSet, avec la même stratégie de mise à jour continue. &lt;&#x2F;p&gt;
&lt;p&gt;Enfin, vous aurez 3 réplicas disponibles dans le nouveau ReplicaSet, et l&#x27;ancien ReplicaSet est réduit à 0.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;revenir-a-une-revision-precedente&quot;&gt;Revenir à une révision précédente&lt;&#x2F;h3&gt;
&lt;p&gt;Suivez les étapes ci-dessous pour restaurer le déploiement de la version actuelle à la version précédente, qui est la version 2.&lt;&#x2F;p&gt;
&lt;p&gt;Vous avez maintenant décidé d&#x27;annuler le déploiement actuel et le retour à la révision précédente:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; rollout undo deployment.v1.apps&#x2F;nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Alternativement, vous pouvez revenir à une révision spécifique en la spécifiant avec &lt;strong&gt;--to-revision&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; rollout undo deployment.v1.apps&#x2F;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --to-revision&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=2

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment.apps&#x2F;nginx-deployment
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour plus de détails sur les commandes liées au déploiement, lisez &lt;code&gt;kubectl rollout&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Le déploiement est maintenant rétabli à une précédente révision stable. Comme vous pouvez le voir, &lt;strong&gt;un événement DeploymentRollback pour revenir à la révision 2 est généré à partir du contrôleur de déploiement&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Vérifiez si la restauration a réussi et que le déploiement s&#x27;exécute comme prévu, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get deployment nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               READY   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   3&#x2F;3     3            3           30m
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Obtenez la description du déploiement:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; describe deployment nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Name:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                   nginx-deployment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Namespace:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;              default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CreationTimestamp:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;      Sun, 02 Sep 2021 18:17:55&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -0500
Labels:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                 app=nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Annotations:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;            deployment.kubernetes.io&#x2F;revision=4
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubernetes.io&#x2F;change-cause&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubectl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; image deployment.v1.apps&#x2F;nginx-deployment nginx=nginx:1.9.1 --record=true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Selector:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               app=nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Replicas:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               3 desired | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; updated | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; total | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; available | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; unavailable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StrategyType:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           RollingUpdate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;MinReadySeconds:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RollingUpdateStrategy:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  25% max unavailable, 25% max surge
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Template:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Labels:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  app=nginx
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Containers:
   nginx:
    Image:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;        nginx:1.9.1
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;         80&#x2F;TCP
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Port:    0&#x2F;TCP
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Environment:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;none&amp;gt;
    Mounts:       &amp;lt;none&amp;gt;
  Volumes:        &amp;lt;none&amp;gt;
Conditions:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           Status  Reason
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;----&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;           ------  ------
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Available&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;      True    MinimumReplicasAvailable
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Progressing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    True    NewReplicaSetAvailable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OldReplicaSets:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;none&amp;gt;
NewReplicaSet:   nginx-deployment-c4747d96c (3&#x2F;3 replicas created)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Events:
  Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    Reason              Age   From                   Message
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;----&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    ------              ----  ----                   -------
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   12m   deployment-controller  Scaled up replica set nginx-deployment-75675f5897 to 3
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 1
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 1
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-c4747d96c to 3
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled down replica set nginx-deployment-75675f5897 to 0
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   11m   deployment-controller  Scaled up replica set nginx-deployment-595696685f to 1
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  DeploymentRollback  15s   deployment-controller  Rolled back deployment &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; to revision 2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;  ScalingReplicaSet   15s   deployment-controller  Scaled down replica set nginx-deployment
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;suppression-d-un-deploiement&quot;&gt;Suppression d&#x27;un déploiement&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete deploy deployment.apps&#x2F;nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# or

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete deploy nginx-deployment
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;publication-et-analyse-d-un-deploiement-tp&quot;&gt;Publication et analyse d&#x27;un déploiement (TP)&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;partie-1&quot;&gt;Partie 1&lt;&#x2F;h4&gt;
&lt;p&gt;Vous devrez publier un fichier deployment contenant la spécification de 3 replicas web servers nginx.&lt;&#x2F;p&gt;
&lt;p&gt;Vous devrez décrire ce deployment, afficher son état et vous assurez qu&#x27;il soit dans un état sain.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;partie-2&quot;&gt;Partie 2&lt;&#x2F;h4&gt;
&lt;p&gt;Scaler le nombre de replicas à 10. Assurez-vous que l&#x27;état des replicas est sain.&lt;&#x2F;p&gt;
&lt;p&gt;Revenir ensuite à une révision précédente de votre spécification.&lt;&#x2F;p&gt;
&lt;p&gt;Détruisez ensuite ce deployment.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;partie-3-facultatif&quot;&gt;Partie 3 (Facultatif)&lt;&#x2F;h4&gt;
&lt;p&gt;Reproduisez l&#x27;étape 1 pour une base de données mysql en lieu et place des serveurs nginx. Ce deployment ne devra disposer que d&#x27;un seul replica.&lt;&#x2F;p&gt;
&lt;p&gt;La persistence des données n&#x27;est requise.&lt;&#x2F;p&gt;
&lt;p&gt;Détruisez ensuite ce deployment.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Architecture Kubernetes</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-architecture/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-architecture/</id>
		<content type="html">&lt;h2 id=&quot;architecture-kubernetes&quot;&gt;Architecture Kubernetes&lt;&#x2F;h2&gt;
&lt;p&gt;Fonctionnalités:&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;feature-of-Kubernetes-Kubernetes-Architecture.png&quot; alt=&quot;feature-of-Kubernetes-Kubernetes-Architecture&quot; width=&quot;720&quot; height=&quot;600&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;kube-functionnalities.webp&quot; alt=&quot;kube-functionnalities&quot; width=&quot;720&quot; height=&quot;600&quot;&gt;
&lt;h3 id=&quot;composants-du-control-plane&quot;&gt;Composants du Control Plane&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;em&gt;Vue macro&lt;&#x2F;em&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;control-plane.png&quot; alt=&quot;Simple_Control_Plane_Schema&quot; width=&quot;720&quot; height=&quot;600&quot;&gt; &lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;kube-basic-archi.png&quot; alt=&quot;Kubernetes basic architecture&quot; width=&quot;800&quot; height=&quot;680&quot;&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;kube-multi-master.png&quot; alt=&quot;Kubernetes multi master&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;p&gt;Le master Kubernetes qui est un ensemble de trois processus qui s&#x27;exécutent sur un seul node de votre cluster, désigné comme master node. Ces processus sont: kube-apiserver, kube-controller-manager et kube-scheduler.
Chaque node non master de votre cluster exécute deux processus:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;kubelet, qui communique avec le Kubernetes master.&lt;&#x2F;li&gt;
&lt;li&gt;kube-proxy, un proxy réseau reflétant les services réseau Kubernetes sur chaque node.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Les différentes parties du control plane Kubernetes, telles que les processus Kubernetes master et kubelet, déterminent la manière dont Kubernetes communique avec votre cluster. Le control plane conserve un enregistrement de tous les objets Kubernetes du système et exécute des boucles de contrôle continues pour gérer l&#x27;état de ces objets. À tout moment, les boucles de contrôle du control plane répondent aux modifications du cluster et permettent de faire en sorte que l&#x27;état réel de tous les objets du système corresponde à l&#x27;état souhaité que vous avez fourni.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, lorsque vous utilisez l&#x27;API Kubernetes pour créer un objet Deployment, vous fournissez un nouvel état souhaité pour le système. Le control plane Kubernetes enregistre la création de cet objet et exécute vos instructions en lançant les applications requises et en les planifiant vers des nodes de cluster, afin que l&#x27;état actuel du cluster corresponde à l&#x27;état souhaité.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;composants-du-master-node&quot;&gt;Composants du master node&lt;&#x2F;h4&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;Kubernetes-101-Architecture-Diagram.jpg&quot; alt=&quot;Kubernetes Archi master-node&quot;&gt; 
&lt;ul&gt;
&lt;li&gt;cluster etcd&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Un stockage simple et distribué de valeurs de clés qui est utilisé pour stocker les données du cluster Kubernetes (telles que le nombre de pods, leur état, l&#x27;espace de noms, etc), les objets API et les détails de la découverte de services. Pour des raisons de sécurité, il n&#x27;est accessible qu&#x27;à partir du serveur d&#x27;API. etc. etcd permet de notifier au cluster les changements de configuration à l&#x27;aide de surveillants. Les notifications sont des requêtes API sur chaque node du cluster etcd pour déclencher la mise à jour des informations dans le stockage du node.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;kube-apiserver&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Le serveur API Kubernetes est l&#x27;entité de gestion centrale qui reçoit toutes les demandes REST de modifications (aux pods, services, ensembles de réplication&#x2F;contrôleurs et autres), servant de front-end au cluster. C&#x27;est également le seul composant qui communique avec le cluster etcd, s&#x27;assurant que les données sont stockées dans etcd et sont en accord avec les détails des services des pods déployés.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;kube-controller-manager&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Exécute un certain nombre de processus de contrôle distincts en arrière-plan (par exemple, le contrôleur de réplication contrôle le nombre de replica dans un pod, le contrôleur de endpoints remplit les objets endpints comme les services et les pods) pour réguler l&#x27;état partagé du cluster et effectuer des tâches de routine. Lorsqu&#x27;un changement dans la configuration d&#x27;un service se produit (par exemple, le remplacement de l&#x27;image à partir de laquelle les pods sont exécutés, ou la modification des paramètres dans le fichier yaml de configuration), le contrôleur repère le changement et commence à travailler vers le nouvel état souhaité.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;cloud-controller-manager&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Le responsable de la gestion des processus du contrôleur qui dépendent du cloud provider sous-jacent (le cas échéant). Par exemple, lorsqu&#x27;un contrôleur doit vérifier si un node a été résilié ou configurer des routes, des équilibreurs de charge ou des volumes dans l&#x27;infrastructure du cloud provider, tout cela est géré par le cloud provider.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;kube-scheduler&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Aide à planifier les pods (un groupe de conteneurs co-localisés à l&#x27;intérieur desquels nos processus d&#x27;application sont exécutés) sur les différents nodes en fonction de l&#x27;utilisation des ressources. Il lit les exigences opérationnelles du service et le planifie sur le node le mieux adapté. Par exemple, si l&#x27;application a besoin de 1 Go de mémoire et de 2 cœurs CPU, les pods de cette application seront planifiés sur un node disposant au moins de ces ressources. Le planificateur s&#x27;exécute chaque fois qu&#x27;il est nécessaire de planifier des pods. Le planificateur doit connaître les ressources totales disponibles ainsi que les ressources allouées aux charges de travail existantes sur chaque node.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h4 id=&quot;architecture-d-un-minion&quot;&gt;Architecture d&#x27;un minion&lt;&#x2F;h4&gt;
&lt;p&gt;Un node est une machine de travail dans Kubernetes, connue auparavant sous le nom de minion. Un node peut être une machine virtuelle ou une machine physique, selon le cluster. &lt;&#x2F;p&gt;
&lt;p&gt;Chaque node contient les services nécessaires à l&#x27;exécution de pods et est géré par les composants du master. &lt;strong&gt;Les services présents sur un node incluent le container runtime, kubelet et kube-proxy.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;node-archi.jpeg&quot; alt=&quot;Architecture Minion&quot; width=&quot;720&quot; height=&quot;600&quot;&gt;
&lt;p&gt;Pour effectuer l&#x27;auto-enregistrement des nodes:&lt;&#x2F;p&gt;
&lt;p&gt;Lorsque l&#x27;indicateur de kubelet &lt;strong&gt;--register-node est à true&lt;&#x2F;strong&gt; (valeur par défaut), le kubelet tente de s&#x27;enregistrer auprès du serveur d&#x27;API. C&#x27;est le modèle préféré, utilisé par la plupart des distributions Linux.&lt;&#x2F;p&gt;
&lt;p&gt;Pour l&#x27;auto-enregistrement (self-registration en anglais), le kubelet est lancé avec les options suivantes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;--kubeconfig - Chemin d&#x27;accès aux informations d&#x27;identification pour s&#x27;authentifier auprès de l&#x27;apiserver.&lt;&#x2F;li&gt;
&lt;li&gt;--cloud-provider - Comment lire les métadonnées d&#x27;un fournisseur de cloud sur lui-même.&lt;&#x2F;li&gt;
&lt;li&gt;--register-node - Enregistrement automatique avec le serveur API.&lt;&#x2F;li&gt;
&lt;li&gt;--register-with-taints - Enregistrez le noeud avec la liste donnée de marques (séparés par des virgules &lt;key&gt;=&lt;value&gt;:&lt;effect&gt;). Sans effet si register-node est à false.&lt;&#x2F;li&gt;
&lt;li&gt;--node-ip - Adresse IP du noeud.&lt;&#x2F;li&gt;
&lt;li&gt;--node-labels - Labels à ajouter lors de l’enregistrement du noeud dans le cluster (voir Restrictions des labels appliquées par le plugin NodeRestriction admission dans les versions 1.13+).&lt;&#x2F;li&gt;
&lt;li&gt;--node-status-update-frequency - Spécifie la fréquence à laquelle kubelet publie le statut de nœud sur master.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Quand le mode autorisation de node et plugin NodeRestriction admission sont activés, les kubelets sont uniquement autorisés à créer &#x2F; modifier leur propre ressource de node.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;concepts-objets-stateful-stateless&quot;&gt;Concepts: objets stateful, stateless&lt;&#x2F;h3&gt;
&lt;p&gt;Un objet dit stateful est capable de maintenir l&#x27;état d&#x27;un processus ou d&#x27;une transaction.&lt;&#x2F;p&gt;
&lt;p&gt;StatefulSet est l&#x27;objet de l&#x27;API de charge de travail utilisé pour gérer des applications stateful.&lt;&#x2F;p&gt;
&lt;p&gt;Il gère le déploiement et la mise à l&#x27;échelle d&#x27;un ensemble de Pods, et fournit des garanties sur l&#x27;ordre et l&#x27;unicité de ces Pods.&lt;&#x2F;p&gt;
&lt;p&gt;Comme un Déploiement, un StatefulSet gère des Pods qui sont basés sur une même spécification de conteneur. Contrairement à un Deployment, un StatefulSet maintient une identité pour chacun de ces Pods. Ces Pods sont créés à partir de la même spec, mais ne sont pas interchangeables: &lt;strong&gt;chacun a un identifiant persistant qu&#x27;il garde à travers tous ses re-scheduling.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Si vous voulez utiliser des volumes de stockage pour fournir de la persistance à votre charge de travail, vous pouvez utiliser un StatefulSet comme partie de la solution. Même si des Pods individuels d&#x27;un StatefulSet sont susceptibles d&#x27;échouer, les identifiants persistants des Pods rendent plus facile de faire correspondre les volumes existants aux nouveaux Pods remplaçant ceux ayant échoué.&lt;&#x2F;p&gt;
&lt;p&gt;Ce qui caractérisera la persistence de notre objet stateful reste toutefois lié à notre politique de storage. Un StatefulSet dont le stockage n&#x27;est pas persistant n&#x27;aura que peu de tolérance à la panne sur des applications critiques ou en hautes disponibilités. C&#x27;est dans cette perspective que nous introduirons ensuite les concepts de PersistentVolume et de PersistentVolumeClaim qui permettent de tirer parti de toutes les fonctionnalités du StatefulSet.&lt;&#x2F;p&gt;
&lt;p&gt;A l&#x27;inverse, les processus pour lesquels il n&#x27;est pas souhaité que l&#x27;état soit maintenu sont dits stateless. Il s&#x27;agit par défaut dans Kubernetes de tout objet qui ne soit pas un StatefulSet ou ne disposant pas d&#x27;un storage  persistant.&lt;&#x2F;p&gt;
&lt;p&gt;Ces concepts seront revus et pratiqués dans le cadre du TP du chapitre &amp;quot;Exploiter Kubernetes&amp;quot;.&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;StatefulSetArchi.png&quot; alt=&quot;StatefulSetArchi&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;persistence-statefulset.png&quot; alt=&quot;PersistenceStatefulSet&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;h3 id=&quot;quelques-exemples-d-architecture-cloud-hybrides-ou-on-premise&quot;&gt;Quelques exemples d&#x27;architecture cloud hybrides ou on-premise&lt;&#x2F;h3&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;possible-oc-archi.jpg&quot; alt=&quot;Possible archi OC&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;architecture-on-premise.jpeg&quot; alt=&quot;Archi on-premise&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;archi-hybrid.png&quot; alt=&quot;Archi Hybrid&quot; width=&quot;700&quot; height=&quot;520&quot;&gt;
&lt;h3 id=&quot;quelques-exemples-d-architecture-cloud-public&quot;&gt;Quelques exemples d&#x27;architecture cloud public&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;azure&quot;&gt;Azure&lt;&#x2F;h4&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;aks.png&quot; alt=&quot;AKS&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;aks-production-deployment.png&quot; alt=&quot;AKS Productionc Deployment&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;azure-application-architecture.png&quot; alt=&quot;Azure Application Architecture&quot; width=&quot;940&quot; height=&quot;620&quot;&gt;
&lt;h4 id=&quot;gcp&quot;&gt;GCP&lt;&#x2F;h4&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;gke-archi.png&quot; alt=&quot;GKE Archi&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;gke-archi2.png&quot; alt=&quot;GKE Archi 2&quot; width=&quot;800&quot; height=&quot;620&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;google-search-assistant-diagram-gcp.webp&quot; alt=&quot;Google assistant&quot; width=&quot;700&quot; height=&quot;520&quot;&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Exploitation de Kubernetes</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-exploitation/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-exploitation/</id>
		<content type="html">&lt;h2 id=&quot;exploiter-kubernetes&quot;&gt;Exploiter Kubernetes&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;types-de-services&quot;&gt;Types de services&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Un service est une abstraction qui &lt;strong&gt;définit un ensemble logique de Pods&lt;&#x2F;strong&gt; exposé à travers un endpoint. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Il existe différents types de services :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;ClusterIP expose l’IP interne du cluster.&lt;&#x2F;li&gt;
&lt;li&gt;NodePort expose le Service sur l’IP de chaque nœud sur un port statique.&lt;&#x2F;li&gt;
&lt;li&gt;LoadBalancer expose le Service à l’extérieur en utilisant l’équilibreur de charge d’un fournisseur de cloud computing.&lt;&#x2F;li&gt;
&lt;li&gt;ExternalName associe le Service à un nom externe, tel que abc.toto.com.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Le service de type ClusterIP est le service par défaut de Kubernetes. Il donne un service à l’intérieur du cluster. Les pods à l’intérieur du même cluster peuvent utiliser ce service pour y accéder. Le service de type ClusterIP ne propose pas d’accès externe.&lt;&#x2F;p&gt;
&lt;p&gt;Spec pour un service de type &lt;strong&gt;ClusterIP&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Service
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: 
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;my-service
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:   
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toto
 type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterIP
 ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: 
 - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http
   port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;targetPort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8080
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TCP
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tous les pods à l’intérieur du cluster peuvent atteindre le pod &amp;quot;toto&amp;quot; sur leur port 8080 via http:&#x2F;&#x2F;my-service:80. Il est aussi possible d’atteindre le pod_b en passant par l’adresse IP du clusterIP, mais ceci n’est pas conseillé. Si il y a plusieurs pod qui ont un label &amp;quot;app&amp;quot; égale à &amp;quot;toto&amp;quot;, my-service distribue les requêtes selon une approche aléatoire.&lt;&#x2F;p&gt;
&lt;p&gt;Un service NodePort est le moyen le plus simple d’aiguiller du trafic externe directement vers un Pod. NodePort, comme son nom l’indique, ouvre un port spécifique sur tous les nodes, et tout trafic envoyé vers ce port est transféré vers le service.&lt;&#x2F;p&gt;
&lt;p&gt;Spec pour un service de &lt;strong&gt;NodePort&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Service
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;my-service
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TCP
   targetPort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8080
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nodePort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;32016
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toto
 type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;NodePort
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Un service LoadBalancer est le moyen standard d’exposer un service via un load balancer. Ce type de service est particulièrement adapté aux clusters Kubernetes managés par un fournisseur cloud. Par exemple sur l’infrastructure Cloud de Google, dans un cluster GKE, cela fera tourner un loadbalancer qui donnera une adresse IP unique qui transférera tout le trafic vers votre service.&lt;&#x2F;p&gt;
&lt;p&gt;Spec pour un service de type &lt;strong&gt;LoadBalancer&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Service
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;my-service
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
 - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TCP
   targetPort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8080
 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toto
 type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LoadBalancer
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;labels-et-choix-d-un-node-pour-le-deploiement&quot;&gt;Labels et choix d&#x27;un node pour le déploiement&lt;&#x2F;h3&gt;
&lt;p&gt;Pour nous intéresser plus tard à l&#x27;affinité nous devons auparavant nous intéresser au &lt;strong&gt;nodeSelector&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Le nodeSelector est une des formes de contrainte de sélection de node disponible dans Kubernetes. C&#x27;est un champ qu&#x27;on rajoute dans la spec des pods, et où on spécifie une paire de clé-valeur correspondant au label du node sur lequel on souhaite recevoir notre pod. Passons en revue un exemple d&#x27;utilisation de nodeSelector.&lt;&#x2F;p&gt;
&lt;p&gt;Avant toute chose, pour assigner un label à un node:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; label node &amp;lt;NODE_NAME&amp;gt; &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dans cet exemple je vais affecter le label ntype:toto pour mon node worker-1.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; label node worker-1 ntype=toto
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Vous pouvez vérifier que cela a fonctionné en exécutant la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get nodes worker-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --show-labels

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Confirmons que l&amp;#39;on retrouve bien notre label
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     STATUS   ROLES    AGE   VERSION   LABELS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;worker-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   Ready    &amp;lt;none&amp;gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;82&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;m   v1.14.0   beta.kubernetes.io&#x2F;arch=amd64,beta.kubernetes.io&#x2F;os=linux,kubernetes.io&#x2F;arch=amd64,kubernetes.io&#x2F;hostname=worker-1,kubernetes.io&#x2F;os=linux,ntype=toto
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;L&#x27;étape suivante sera d&#x27;ajouter le champ nodeSelector à la configuration YAML de votre pod.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pod
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
    image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
  nodeSelector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ntype&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;toto
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Crééons notre pod avec la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; pod.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Une fois la commande lancée, le pod est alors planifié sur le node auquel vous avez attaché le label. Constatons cela avec la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pods&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; wide

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    READY   STATUS    RESTARTS   AGE     IP          NODE     NOMINATED NODE   READINESS GATES
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1     Running   0          2m52s   10.44.0.1   worker-1   &amp;lt;node&amp;gt;           &amp;lt;node&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Vous pouvez supprimer le label de votre node en rajoutant le signe &lt;strong&gt;&#x27;-&#x27;&lt;&#x2F;strong&gt; (moins) à la fin de la commande kubectl label sans spécifier la valeur de la clé. Par exemple si je souhaite supprimer le label crée précédemment, je vais utiliser la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; label node worker-1 ntype-
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous pouvons également ordonnancer un pod sur un node spécifique via le paramètre nodeName.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pod
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nodeName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;foo-node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# schedule pod to specific node
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
    image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
    imagePullPolicy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;IfNotPresent
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous pourrions par exemple souhaiter run un pod sur plusieurs nodes avec différents labels ou encore run un pod sur tous les nodes qui ne contiennent pas de tel ou tel label.&lt;&#x2F;p&gt;
&lt;p&gt;Néanmoins le nodeSelector ou le nodeName possèdent quelques limites. Dans notre exemple ne nous n&#x27;avions utilisé qu&#x27;un seul label de selection pour atteindre notre objectif. &lt;&#x2F;p&gt;
&lt;p&gt;Mais que ce passe-til si notre exigence est beaucoup plus complexe ?&lt;&#x2F;p&gt;
&lt;p&gt;Pour résoudre ces problématiques complexes, nous utiliserons une autre fonctionnalité proposée par kubernetes qui est l&#x27;affinité ou anti-affinité de node, que nous aborderons dans la section suivante.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;affinite-et-anti-affinite&quot;&gt;Affinité et anti-affinité&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;La fonctionnalité d&#x27;affinité de node nous fournit des fonctionnalités avancées pour limiter le placement de pods sur des nodes spécifiques.
Dans Kubernetes, les directives relatives aux &amp;quot;Affinités&amp;quot; contrôlent comment les Pods sont programmés - plus regroupés ou plus dispersés.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Pour PodAffinity, vous pouvez essayer de regrouper un certain nombre de Pods dans des domaines de topologie qualifiés&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Pour PodAntiAffinity, seulement un Pod peut être programmé dans un domaine de topologie unique.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;La fonctionnalité &amp;quot;EvenPodsSpread&amp;quot; fournit des options flexibles pour distribuer des Pods uniformément sur différents domaines de topologie - pour mettre en place de la haute disponibilité ou réduire les coûts. Cela peut aussi aider au rolling update des charges de travail et à la mise à l&#x27;échelle de réplicas.&lt;&#x2F;p&gt;
&lt;p&gt;Il existe actuellement deux types d&#x27;affinité de node, appelés:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;requiredDuringSchedulingIgnoredDuringExecution&lt;&#x2F;strong&gt;
&lt;strong&gt;preferredDuringSchedulingIgnoredDuringExecution&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On peut distinguer ces types avec les états suivants:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;During&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Scheduling 	During Execution
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;required&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 	ignored
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;preferred&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 	ignored
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous avons ainsi:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;During Scheduling&lt;&#x2F;strong&gt;: c&#x27;est l&#x27;état où un pod n&#x27;existe pas encore et qu&#x27;il est créé pour la première fois. &lt;&#x2F;p&gt;
&lt;p&gt;Cet état peut bénéficier de deux valeurs:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;required&lt;&#x2F;strong&gt;: exige que le pod soit placé sur un node respectant les règles d&#x27;affinité. S&#x27;il ne parvient pas à en trouver un, le pod ne sera alors pas planifié.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;preferred&lt;&#x2F;strong&gt;: quand aucun node correspondant n&#x27;est trouvé. Le scheduler ignorera simplement les règles d’affinité du pod et le placera sur n&#x27;importe quel node disponible.&lt;&#x2F;p&gt;
&lt;p&gt;C’est une façon de dire au scheduler: &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Fais de ton mieux pour placer le pod sur la correspondance d’affinité mais si tu ne peux vraiment pas en trouver un, place-le sur n’importe quel autre pod.&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;During Execution&lt;&#x2F;strong&gt;: c&#x27;est l&#x27;état lorsqu&#x27;un pod est déjà exécuté et qu&#x27;un changement a été apporté à l&#x27;environnement qui affecte l&#x27;affinité du node, tel qu&#x27;un changement dans le label du node. &lt;&#x2F;p&gt;
&lt;p&gt;Comme vous pouvez le constater, les deux types d’affinité disponibles aujourd’hui sont à l&#x27;état ingored, ce qui signifie que les pods continueront à fonctionner et que toute modification de l&#x27;affinité des nodes, n&#x27;aura aucun impact une fois qu&#x27;ils sont planifiés.&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;affinité de node est spécifiée dans le champ nodeAffinity du champ affinity dans la spécification du pod. Voici un exemple d&#x27;un pod utilisant une affinité de node:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pod
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;affinity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nodeAffinity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requiredDuringSchedulingIgnoredDuringExecution&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nodeSelectorTerms&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;matchExpressions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ntype
            operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NotIn
            values&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;virus
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;malware
  containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
    image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;nginx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Cette règle d&#x27;affinité de node indique que le pod ne peut pas être placé (&lt;strong&gt;grâce à l&#x27;opérateur NotIn&lt;&#x2F;strong&gt;) sur un node portant un label dont la clé est ntype et dont la valeur est virus ou malware.&lt;&#x2F;p&gt;
&lt;p&gt;Voici les différents opérateurs avec leur description pris en charge par les règles d&#x27;affinité de node:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;In&lt;&#x2F;strong&gt; - utiliser les nodes avec les mêmes clés et valeurs à ceux qui sont définies dans le spec des pods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NotIn&lt;&#x2F;strong&gt; - ignorer les nodes avec les mêmes clés et valeurs à ceux qui sont définies dans le spec des pods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exists&lt;&#x2F;strong&gt; - utiliser les nodes avec les mêmes clés à ceux qui sont définies dans le spec des pods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DoesNotExist&lt;&#x2F;strong&gt; - ignorer les nodes avec les mêmes clés à ceux qui sont définies dans le spec des pods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gt&lt;&#x2F;strong&gt; - utiliser les nodes avec des valeurs numériques supérieur à ceux qui sont définies dans le spec du pod.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lt&lt;&#x2F;strong&gt; - utiliser les nodes avec des valeurs numériques inférieur à ceux qui sont définies dans le spec du pod.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Les opérateurs &lt;strong&gt;NotIn&lt;&#x2F;strong&gt; et &lt;strong&gt;DoesNotExist&lt;&#x2F;strong&gt; provoquent ce que l&#x27;on appelle un comportement anti-affinité de node afin de respawn les pods des nodes que vous avez spécifiés. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Sources&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;scheduling-eviction&#x2F;assign-pod-node&#x2F;&quot;&gt;Assigning Pods to Nodes&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devopssec.fr&#x2F;article&#x2F;comprendre-manipuler-scheduler-kubernetes&quot;&gt;Manipuler le scheduler Kubernetes&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;daemons-set-health-check-config-map-et-secrets&quot;&gt;Daemons set, health check, config map et secrets&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;daemonset&quot;&gt;DaemonSet&lt;&#x2F;h4&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;persistence-daemonset.png&quot; alt=&quot;PersistenceDaemonSet&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;DaemonSet - Un DeamonSet est un contrôleur qui va s&#x27;assurer qu&#x27;un seul et unique pod s&#x27;exécute sur un node. C&#x27;est utile pour faire du monitoring serveur ou collecter des logs par exemple. Ainsi quand un node est ajouté au cluster, le DaemonSet va lancer lui même le pod qu&#x27;il définit.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Vous pouvez décrire un DaemonSet dans un fichier YAML. Par exemple, le fichier daemonset.yaml ci-dessous décrit un DaemonSet qui exécute l&#x27;image Docker fluentd-elasticsearch:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apps&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DaemonSet
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fluentd-elasticsearch
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kube-system
  labels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;k8s-app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fluentd-logging
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;matchLabels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fluentd-elasticsearch
  template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;labels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fluentd-elasticsearch
    spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tolerations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can&amp;#39;t run pods
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;node-role.kubernetes.io&#x2F;master
        operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Exists
        effect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NoSchedule
      containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fluentd-elasticsearch
        image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;quay.io&#x2F;fluentd_elasticsearch&#x2F;fluentd:v2.5.2
        resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;200Mi
          requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;100m
            memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;200Mi
        volumeMounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;varlog
          mountPath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;var&#x2F;log
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;varlibdockercontainers
          mountPath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers
          readOnly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;terminationGracePeriodSeconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;varlog
        hostPath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;var&#x2F;log
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;varlibdockercontainers
        hostPath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Puis, appliquer la spec:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;k8s.io&#x2F;examples&#x2F;controllers&#x2F;daemonset.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour détruire le DaemonSet:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;k8s.io&#x2F;examples&#x2F;controllers&#x2F;daemonset.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;healthcheck&quot;&gt;HealthCheck&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Afin de vérifier si un conteneur dans un pod est sain et prêt à servir le trafic, Kubernetes prévoit une série de mécanismes de contrôle de santé. Les contrôles de santé, ou sondes comme on les appelle dans Kubernetes, sont effectués par la kubelet pour déterminer quand redémarrer un conteneur (sondes de lividité) et utilisés par les services et les déploiements pour déterminer si un pod doit recevoir du trafic (sondes de disponibilité). Dans ce qui suit, nous nous concentrerons sur les contrôles de santé HTTP. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Notez qu&#x27;il est de la responsabilité du développeur de l&#x27;application d&#x27;exposer une URL que le kubelet peut utiliser pour déterminer si le conteneur est sain (et potentiellement prêt).&lt;&#x2F;p&gt;
&lt;p&gt;Créons un pod qui expose un endpoint &#x2F;health, répondant avec un code d&#x27;état HTTP 200:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;openshift-evangelists&#x2F;kbe&#x2F;main&#x2F;specs&#x2F;healthz&#x2F;pod.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dans la spec du pod nous avons défini ce qui suit:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;livenessProbe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;initialDelaySeconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;periodSeconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;httpGet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;health
port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;9876
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;La configuration ci-dessus indique à Kubernetes de commencer à vérifier le point de terminaison &lt;strong&gt;&#x2F;health&lt;&#x2F;strong&gt;, après avoir initialement attendu 2 secondes, toutes les 5 secondes. &lt;&#x2F;p&gt;
&lt;p&gt;Si nous regardons maintenant le pod, nous pouvons voir qu&#x27;il est considéré comme sain:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; describe pod hc

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Name:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;         hc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Namespace:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Priority:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;     0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Node:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;         minikube&#x2F;192.168.39.51
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;...
Containers:
  sise:
    Container&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ID:   docker:&#x2F;&#x2F;2cfe4187808a89ae4731abfe242ac42611e1f658505691f540ac31ca8f6ce86f
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Image:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;          quay.io&#x2F;openshiftlabs&#x2F;simpleservice:0.5.0
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;...
    Ready:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;          True
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Restart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; Count:  0
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Liveness:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;       http-get http:&#x2F;&#x2F;:9876&#x2F;health delay=2s timeout=1s period=5s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#success=1 #failure=3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    Environment:    &amp;lt;none&amp;gt;
Conditions:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;              Status
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Initialized&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;       True 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ready&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;             True 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ContainersReady&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   True 
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PodScheduled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;      True 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Source&lt;&#x2F;em&gt; &lt;a href=&quot;https:&#x2F;&#x2F;kubebyexample.com&#x2F;en&#x2F;concept&#x2F;health-checks&quot;&gt;HealthChecks Kube By Example&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;configmap&quot;&gt;ConfigMap&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Une ConfigMap est un objet d&#x27;API utilisé pour stocker des données non confidentielles dans des paires clé-valeur. Les pods peuvent utiliser les ConfigMaps comme variables d&#x27;environnement, arguments de ligne de commande ou fichiers de configuration dans un volume.
Un ConfigMap vous permet de découpler la configuration spécifique à l&#x27;environnement de vos images de conteneur, afin que vos applications soient facilement portables.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Typiquement, nous pourrions renseigner en tant que ConfigMap les fichiers de configuration de nos bases de données.&lt;&#x2F;p&gt;
&lt;p&gt;Utilisez une ConfigMap pour définir les données de configuration séparément du code de l&#x27;application.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, imaginez que vous développez une application que vous pouvez exécuter sur votre propre ordinateur (pour le développement) et dans le cloud (pour gérer le trafic réel). Vous écrivez le code pour chercher dans une variable d&#x27;environnement appelée DATABASE_HOST. Localement, vous attribuez à cette variable la valeur localhost. Dans le nuage, vous la définissez pour faire référence à un service Kubernetes qui expose le composant de base de données à votre cluster. Cela vous permet de récupérer une image de conteneur exécutée dans le nuage et de déboguer le même code localement si nécessaire.&lt;&#x2F;p&gt;
&lt;p&gt;Une ConfigMap n&#x27;est pas conçue pour contenir de grandes quantités de données. Les données stockées dans une ConfigMap ne peuvent pas dépasser 1 Mo. Si vous devez stocker des paramètres dont la taille dépasse cette limite, vous pouvez envisager de monter un volume ou d&#x27;utiliser une base de données ou un service de fichiers distinct.&lt;&#x2F;p&gt;
&lt;p&gt;Créer un objet ConfigMap et définissez la spec d&#x27;un pod utilisant cette ConfigMap:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# cm.yaml
# ConfigMap
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ConfigMap
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;game-demo
data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# property-like keys; each key maps to a simple value
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;player_initial_lives&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ui_properties_file_name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user-interface.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# file-like keys
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;game.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    enemy.types=aliens,monsters
    player.maximum-lives=5    
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;user-interface.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    color.good=purple
    color.bad=yellow
    allow.textmode=true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Pod
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pod
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configmap-demo-pod
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;demo
      image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;alpine
      command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;3600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Define the environment variable
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PLAYER_INITIAL_LIVES &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Notice that the case is different here
                                     # from the key name in the ConfigMap.
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;valueFrom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configMapKeyRef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;game-demo           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# The ConfigMap this value comes from.
              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;player_initial_lives &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# The key to fetch.
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UI_PROPERTIES_FILE_NAME
          valueFrom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configMapKeyRef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;game-demo
              key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ui_properties_file_name
      volumeMounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config
        mountPath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readOnly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# You set volumes at the Pod level, then mount them into containers inside that Pod
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config
      configMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Provide the name of the ConfigMap you want to mount.
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;game-demo
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# An array of keys from the ConfigMap to create as files
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;game.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;game.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user-interface.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user-interface.properties&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; cm.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour détruire les ressources:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; delete&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; cm.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;secrets&quot;&gt;Secrets&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Les objets secret de Kubernetes vous permettent de stocker et de gérer des informations sensibles, telles que les mots de passe, les tokens OAuth et les clés ssh. Mettre ces informations dans un secret est plus sûr et plus flexible que de le mettre en dur dans la définition d&#x27;un Pod ou dans une image de container.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Un secret est un objet qui contient une petite quantité de données sensibles telles qu&#x27;un mot de passe, un token ou une clé. De telles informations pourraient autrement être placées dans une spécification de pod ou dans une image; le placer dans un objet secret permet de mieux contrôler la façon dont il est utilisé et réduit le risque d&#x27;exposition accidentelle.&lt;&#x2F;p&gt;
&lt;p&gt;Les utilisateurs peuvent créer des secrets et le système crée également des secrets.&lt;&#x2F;p&gt;
&lt;p&gt;Pour utiliser un secret, un pod doit référencer le secret. Un secret peut être utilisé avec un pod de deux manières: sous forme de fichiers dans un volume monté sur un ou plusieurs de ses conteneurs, ou utilisé par kubelet lorsque vous récupérez des images pour le pod.&lt;&#x2F;p&gt;
&lt;p&gt;Vous pouvez également créer un secret dans un fichier d&#x27;abord, au format json ou yaml, puis créer cet objet. Le secret contient deux table de hachage: data et stringData. Le champ data est utilisé pour stocker des données arbitraires, encodées en base64. Le champ stringData est fourni pour plus de commodité et vous permet de fournir des données secrètes sous forme de chaînes non codées.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, pour stocker deux chaînes dans un secret à l&#x27;aide du champ data, convertissez-les en base64 comme suit:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64
YWRtaW4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1f2d1e2e67df&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64
MWYyZDFlMmU2N2Rm
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Écrivez un secret qui ressemble à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Secret
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mysecret
type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Opaque
data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;username&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;YWRtaW4=
  password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MWYyZDFlMmU2N2Rm
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Maintenant, créez le secret en utilisant &lt;code&gt;kubectl apply&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; .&#x2F;secret.yaml

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mysecret&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; created
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour certains scénarios, vous pouvez utiliser le champ stringData à la place. Ce champ vous permet de mettre une chaîne non codée en base64 directement dans le secret, et la chaîne sera codée pour vous lorsque le secret sera créé ou mis à jour.&lt;&#x2F;p&gt;
&lt;p&gt;Un exemple pratique de cela pourrait être le suivant: vous déployez une application qui utilise un secret pour stocker un fichier de configuration. Vous souhaitez remplir des parties de ce fichier de configuration pendant votre processus de déploiement.&lt;&#x2F;p&gt;
&lt;p&gt;Si votre application utilise le fichier de configuration suivant:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;apiUrl: &amp;quot;https:&#x2F;&#x2F;my.api.com&#x2F;api&#x2F;v1&amp;quot;
username: &amp;quot;user&amp;quot;
password: &amp;quot;password&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Vous pouvez stocker cela dans un secret en utilisant ce qui suit:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Secret
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mysecret
type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Opaque
stringData&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config.yaml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|-
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    apiUrl: &amp;quot;https:&#x2F;&#x2F;my.api.com&#x2F;api&#x2F;v1&amp;quot;
    username: {{username}}
    password: {{password}}    
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Votre outil de déploiement pourrait alors remplacer les variables de modèle {{username}} et {{password}} avant d&#x27;exécuter &lt;code&gt;kubectl apply&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;stringData est un champ de commodité en écriture seule. Il n&#x27;est jamais affiché lors de la récupération des secrets. Par exemple, si vous exécutez la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get secret mysecret&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;L&#x27;output généré sera alors:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Secret
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;creationTimestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2021-11-15T20:40:59Z
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mysecret
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default
  resourceVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;7225&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c280ad2e-e916-11e8-98f2-025000000001
type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Opaque
data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config.yaml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;YXBpVXJsOiAiaHR0cHM6Ly9teS5hcGkuY29tL2FwaS92MSIKdXNlcm5hbWU6IHt7dXNlcm5hbWV9fQpwYXNzd29yZDoge3twYXNzd29y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour décoder un secret nous aurons besoin de récupérer le secret créé via la command &lt;code&gt;kubectl get secret&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get secret mysecret&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Secret
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;creationTimestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2021-01-22T18:41:56Z
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mysecret
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default
  resourceVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;164619&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cfee02d6-c137-11e5-8d73-42010af00002
type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Opaque
data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;username&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;YWRtaW4=
  password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MWYyZDFlMmU2N2Rm
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Décodez le champ du mot de passe:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MWYyZDFlMmU2N2Rm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64 --decode

1f2d1e2e67df
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;persistent-volumes-et-persistent-volumes-claim&quot;&gt;Persistent Volumes et Persistent Volumes Claim&lt;&#x2F;h3&gt;
&lt;p&gt;La gestion du stockage est un problème distinct de la gestion du compute. &lt;&#x2F;p&gt;
&lt;p&gt;Le sous-système PersistentVolume fournit aux utilisateurs et aux administrateurs une API qui fait abstraction des détails sur la façon dont le stockage est fourni et sur la façon dont il est consommé. &lt;&#x2F;p&gt;
&lt;p&gt;Pour ce faire, nous introduisons deux nouvelles ressources API: &lt;strong&gt;PersistentVolume et PersistentVolumeClaim&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un PersistentVolume (PV) est un élément de stockage en réseau dans le cluster qui a été provisionné par un administrateur. Il s&#x27;agit d&#x27;une ressource du cluster, tout comme un nœud est une ressource du cluster. Les PV sont des plugins de volume comme les volumes, mais ont un cycle de vie indépendant de tout pod individuel qui utilise le PV. Cet objet API capture les détails de l&#x27;implémentation du stockage, qu&#x27;il s&#x27;agisse de NFS, d&#x27;iSCSI ou d&#x27;un système de stockage spécifique au fournisseur de cloud.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Une PersistentVolumeClaim (PVC) est une demande de stockage par un utilisateur. Elle est similaire à un pod. Les pods consomment des ressources de nœuds et les PVC des ressources de PV. Les pods peuvent demander des niveaux spécifiques de ressources (CPU et mémoire). Les revendications peuvent demander une taille et des modes d&#x27;accès spécifiques (par exemple, peuvent être montées une fois en lecture&#x2F;écriture ou plusieurs fois en lecture seule).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Alors que les PersistentVolumeClaims permettent à un utilisateur de consommer des ressources de stockage abstraites, il est courant que les utilisateurs aient besoin de PersistentVolumes avec des propriétés variables, telles que la performance, pour différents problèmes. &lt;&#x2F;p&gt;
&lt;p&gt;Les administrateurs de clusters doivent être en mesure d&#x27;offrir une variété de PersistentVolumes qui diffèrent en plus de la taille et des modes d&#x27;accès, sans exposer les utilisateurs aux détails de l&#x27;implémentation de ces volumes. &lt;&#x2F;p&gt;
&lt;p&gt;Pour ces besoins, il existe la ressource StorageClass.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Une StorageClass permet aux administrateurs de décrire les &amp;quot;classes&amp;quot; de stockage qu&#x27;ils proposent. Les différentes classes peuvent correspondre à des niveaux de qualité de service, à des politiques de sauvegarde ou à des politiques arbitraires déterminées par les administrateurs du cluster. Kubernetes lui-même ne se prononce pas sur ce que représentent les classes. Ce concept est parfois appelé &amp;quot;profils&amp;quot; dans d&#x27;autres systèmes de stockage.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Quelques types de plugins pour persistent volumes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GCEPersistentDisk&lt;&#x2F;li&gt;
&lt;li&gt;AWSElasticBlockStore&lt;&#x2F;li&gt;
&lt;li&gt;AzureFile&lt;&#x2F;li&gt;
&lt;li&gt;AzureDisk&lt;&#x2F;li&gt;
&lt;li&gt;FC (Fibre Channel)&lt;&#x2F;li&gt;
&lt;li&gt;Flocker&lt;&#x2F;li&gt;
&lt;li&gt;NFS&lt;&#x2F;li&gt;
&lt;li&gt;iSCSI&lt;&#x2F;li&gt;
&lt;li&gt;RBD (Ceph Block Device)&lt;&#x2F;li&gt;
&lt;li&gt;CephFS&lt;&#x2F;li&gt;
&lt;li&gt;Cinder (OpenStack block storage)&lt;&#x2F;li&gt;
&lt;li&gt;Glusterfs&lt;&#x2F;li&gt;
&lt;li&gt;VsphereVolume&lt;&#x2F;li&gt;
&lt;li&gt;Quobyte Volumes&lt;&#x2F;li&gt;
&lt;li&gt;HostPath (tester sur un seul nœud uniquement - le stockage local n&#x27;est en aucun cas pris en charge et ne fonctionnera pas dans un cluster multi-nœuds)&lt;&#x2F;li&gt;
&lt;li&gt;VMware Photon&lt;&#x2F;li&gt;
&lt;li&gt;Portworx Volumes&lt;&#x2F;li&gt;
&lt;li&gt;ScaleIO Volumes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Les plug-ins de volume suivants prennent en charge les volumes de blocs bruts, y compris l&#x27;approvisionnement dynamique, le cas échéant:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;AWSElasticBlockStore&lt;&#x2F;li&gt;
&lt;li&gt;AzureDisk&lt;&#x2F;li&gt;
&lt;li&gt;FC (Fibre Channel)&lt;&#x2F;li&gt;
&lt;li&gt;GCEPersistentDisk&lt;&#x2F;li&gt;
&lt;li&gt;iSCSI&lt;&#x2F;li&gt;
&lt;li&gt;Local volume&lt;&#x2F;li&gt;
&lt;li&gt;RBD (Ceph Block Device)&lt;&#x2F;li&gt;
&lt;li&gt;VsphereVolume (alpha)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Seuls les volumes FC et iSCSI prennent en charge les volumes de blocs bruts dans Kubernetes 1.9. La prise en charge des plugins supplémentaires a été ajoutée dans 1.10. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Se référer à la documentation spécifique a chaque plugin pour déterminer la spec permettant leur uitlisation.&lt;&#x2F;p&gt;
&lt;p&gt;Pour des volumes persistants utilisant un volume de bloc brut:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PersistentVolume
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;block-pv
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;capacity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;10Gi
  accessModes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ReadWriteOnce
  volumeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Block
  persistentVolumeReclaimPolicy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Retain
  fc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;targetWWNs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;50060e801049cfd1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lun&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readOnly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Revendication de volume persistant demandant un volume de bloc brut:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PersistentVolumeClaim
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;block-pvc
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;accessModes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ReadWriteOnce
  volumeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Block
  resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;10Gi
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Spécification de pod ajoutant le chemin du périphérique de bloc brut dans le conteneur:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pod
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pod-with-block-volume
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fc-container
      image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fedora:26
      command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;bin&#x2F;sh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tail -f &#x2F;dev&#x2F;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; ]
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;volumeDevices&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data
          devicePath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;dev&#x2F;xvda
  volumes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data
      persistentVolumeClaim&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;claimName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;block-pvc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Lorsque vous ajoutez un périphérique de bloc brut pour un pod, vous spécifiez le chemin de périphérique dans le conteneur au lieu d&#x27;un chemin de montage.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Sources&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;unofficial-kubernetes.readthedocs.io&#x2F;en&#x2F;latest&#x2F;concepts&#x2F;storage&#x2F;persistent-volumes&#x2F;&quot;&gt;Unoffical K8s: persistent volumes&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;fr&#x2F;docs&#x2F;concepts&#x2F;storage&#x2F;persistent-volumes&#x2F;&quot;&gt;Concepts: Persistent Volumes&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;deploiement-d-une-base-de-donnees-et-d-une-application-tp&quot;&gt;Déploiement d&#x27;une base de données et d&#x27;une application (TP)&lt;&#x2F;h3&gt;
&lt;p&gt;Vos disposez de la spec suivante qui définit respectivement:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un PVC qui crée automatiquement le PV associé via la storage-class local-path&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Vous devrez définir:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un service mysql&lt;&#x2F;li&gt;
&lt;li&gt;une configmap pour un fichier de configuration de votre choix&lt;&#x2F;li&gt;
&lt;li&gt;un secret pour notre db&lt;&#x2F;li&gt;
&lt;li&gt;le deployment de notre db&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Vous aurez à charge d&#x27;écrire la spec du deployment du service et du secret mysql correspondant. N&#x27;hésitez pas pour ce faire à vous repportez à la section &amp;quot;Syntaxe YAML&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;mysql-full-resources.yaml&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;storage.k8s.io&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StorageClass
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ebs-storage-class
provisioner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubernetes.io&#x2F;aws-ebs
parameters&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;io1
  iopsPerGB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fsType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xfs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PersistentVolumeClaim
apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ebs-pvc
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;accessModes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ReadWriteOnce
  resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;5Gi
  storageClassName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ebs-storage-class
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apps&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Deployment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ConfigMap
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Secret
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply mysql-full-resources.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Facultatif&lt;&#x2F;em&gt;: Réécrivez les specs en utilisant une autre classe de storage que celle définie précédemment (kubernetes.io&#x2F;aws-ebs) et créer le PV et le PVC en conséquence.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tp-version-2-on-k3s-instead-of-aws&quot;&gt;TP Version 2 (on K3s instead of AWS)&lt;&#x2F;h2&gt;
&lt;p&gt;Vos disposez de la spec suivante qui définit respectivement:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un PVC qui crée automatiquement le PV associé via la storage-class local-path&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Vous devrez définir:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un service mysql&lt;&#x2F;li&gt;
&lt;li&gt;un secret pour notre db&lt;&#x2F;li&gt;
&lt;li&gt;le deployment de notre db&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Vous aurez à charge d&#x27;écrire la spec du deployment du service et du secret mysql correspondant. N&#x27;hésitez pas pour ce faire à vous repportez à la section &amp;quot;Syntaxe YAML&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;mysql-full-resources.yaml&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PersistentVolumeClaim
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;local-path-pvc
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;accessModes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ReadWriteOnce
  storageClassName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;local-path
  resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;2Gi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apps&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Deployment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ConfigMap
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Secret
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Completer ce qui suit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply mysql-full-resources.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Facultatif&lt;&#x2F;em&gt;: Réécrivez les specs en utilisant une autre classe de storage que celle définie précédemment (local-path) et créer le PV et le PVC en conséquence.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Kubernetes en Production</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-in-production/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-in-production/</id>
		<content type="html">&lt;h2 id=&quot;kubernetes-en-production&quot;&gt;Kubernetes en production&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;frontal-administrable-ingress&quot;&gt;Frontal administrable Ingress&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Ingress (ou entrée réseau), ajouté à Kubernetes v1.1, expose les routes HTTP et HTTPS de l&#x27;extérieur du cluster à des services au sein du cluster. Le routage du trafic est contrôlé par des règles définies sur la ressource Ingress.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    internet
        |
   [ Ingress ]
   --|-----|--
   [ Services ]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;FEATURE STATE: Kubernetes v1.1 [beta]&lt;&#x2F;em&gt;
Avant de commencer à utiliser un Ingress, vous devez comprendre qu&#x27;un Ingress est une ressource en &amp;quot;version Beta&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Un Ingress peut être configuré pour donner aux services des URLs accessibles de l&#x27;extérieur, un équilibrage du trafic de charge externe, la terminaison SSL&#x2F;TLS et un hébergement virtuel basé sur le nom. Un contrôleur d&#x27;Ingress est responsable de l&#x27;exécution de l&#x27;Ingress, généralement avec un load-balancer (équilibreur de charge), bien qu&#x27;il puisse également configurer votre routeur périphérique ou des interfaces supplémentaires pour aider à gérer le trafic.&lt;&#x2F;p&gt;
&lt;p&gt;Un Ingress n&#x27;expose pas de ports ni de protocoles arbitraires. &lt;strong&gt;Exposer des services autres que HTTP et HTTPS à Internet généralement utilise un service de type Service.Type=NodePort ou Service.Type=LoadBalancer.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;networking.k8s.io&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ingress
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;test-ingress
  annotations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx.ingress.kubernetes.io&#x2F;rewrite-target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rules&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;paths&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;testpath
        pathType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Prefix
        backend&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;test
            port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;La spécification de la ressource Ingress dispose de toutes les informations nécessaires pour configurer un loadbalancer ou un serveur proxy. Plus important encore, il contient une liste de règles d&#x27;appariement de toutes les demandes entrantes. La ressource Ingress ne supporte que les règles pour diriger le trafic HTTP.&lt;&#x2F;p&gt;
&lt;p&gt;Pour 2 vhosts sur un ingress:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extensions&#x2F;v1beta1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ingress
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name-virtual-host-ingress
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rules&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service-a.example.com
    http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;paths&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;backend&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;serviceName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service-a
          servicePort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service-b.example.com
    http&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;paths&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;backend&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;serviceName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service-a
          servicePort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;limitation-de-ressources&quot;&gt;Limitation de ressources&lt;&#x2F;h3&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;k8s-recs-ands-limits.png&quot; alt=&quot;requests-limits&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;requests-limits.png&quot; alt=&quot;requests-limits-macro-fonctionnement&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;p&gt;Lorsque Kubernetes planifie un Pod, il est important que les conteneurs disposent de suffisamment de ressources pour fonctionner. Si vous planifiez une grosse application sur un node aux ressources limitées, il est possible que le node soit à court de mémoire ou de ressources CPU et que les pods cessent de fonctionner.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Les requêtes et les limites sont les mécanismes utilisés par Kubernetes pour contrôler les ressources telles que le CPU et la mémoire. Les requêtes sont ce que le conteneur est assuré d&#x27;obtenir.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Si un conteneur demande une ressource, Kubernetes ne le programmera que sur un node qui peut lui fournir cette ressource. Les limites, quant à elles, garantissent qu&#x27;un conteneur ne dépasse jamais une certaine valeur. Le conteneur est seulement autorisé à aller jusqu&#x27;à la limite, et ensuite il est restreint.&lt;&#x2F;p&gt;
&lt;p&gt;Il est important de se rappeler que la limite ne peut jamais être inférieure à la demande. Si vous essayez de le faire, Kubernetes émettra une erreur et ne vous laissera pas exécuter le conteneur.&lt;&#x2F;p&gt;
&lt;p&gt;Les demandes et les limites sont établies par conteneur. Si les pods ne contiennent généralement qu&#x27;un seul conteneur, il est courant de voir des pods avec plusieurs conteneurs. Chaque conteneur du pod reçoit sa propre limite et sa propre demande, mais comme les pods sont toujours planifiés en tant que groupe, vous devez additionner les limites et les demandes de chaque conteneur pour obtenir une valeur globale pour le pod.&lt;&#x2F;p&gt;
&lt;p&gt;Il existe deux types de ressources : &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Le processeur et la mémoire.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Le scheduler de Kubernetes les utilisent pour déterminer où exécuter vos pods.&lt;&#x2F;p&gt;
&lt;p&gt;Une spécification typique de ressources pour un pod peut ressembler à ceci. Ce pod possède deux conteneurs :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;container1
    image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;busybox
    resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;32Mi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;200m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;64Mi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;200m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;container2
    image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;busybox
    resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;96Mi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;300m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: 
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;192Mi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;750m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Chaque conteneur du pod peut définir ses propres demandes et limites, qui sont toutes additives. Ainsi, dans l&#x27;exemple ci-dessus, le Pod a une demande totale de 500 m de CPU et 128 MiB de mémoire, et une limite totale de 1 CPU et 256MiB de mémoire.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;CPU&lt;&#x2F;em&gt;
Les ressources CPU sont définies en millicores. Si votre conteneur a besoin de deux cœurs complets pour fonctionner, vous mettez la valeur &amp;quot;2000m&amp;quot;. Si votre conteneur n&#x27;a besoin que de ¼ de cœur, vous mettrez une valeur de &amp;quot;250m&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Une chose à garder à l&#x27;esprit concernant les demandes de CPU est que si vous mettez une valeur supérieure au nombre de cœurs de votre plus gros node, votre pod ne sera jamais programmé. Disons que vous avez un pod qui a besoin de quatre cœurs, mais que votre cluster Kubernetes est composé de VM à double cœur - votre pod ne sera jamais programmé !&lt;&#x2F;p&gt;
&lt;p&gt;À moins que votre application ne soit spécifiquement conçue pour tirer parti de plusieurs cœurs (l&#x27;informatique scientifique et certaines bases de données viennent à l&#x27;esprit), il est généralement préférable de maintenir la demande de CPU à &#x27;1&#x27; ou moins, et d&#x27;exécuter plus de répliques pour la faire évoluer. Cela donne au système plus de flexibilité et de fiabilité.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;RAM&lt;&#x2F;em&gt;
Les ressources mémoire sont définies en octets. Normalement, vous donnez une valeur de mebibytes pour la mémoire (c&#x27;est en fait la même chose qu&#x27;un mégaoctet), mais vous pouvez donner n&#x27;importe quelle valeur en octets.&lt;&#x2F;p&gt;
&lt;p&gt;Comme pour le CPU, si vous introduisez une demande de mémoire supérieure à la quantité de mémoire disponible sur vos nodes, le pod ne sera jamais programmé.&lt;&#x2F;p&gt;
&lt;p&gt;Contrairement aux ressources du CPU, la mémoire ne peut pas être compressée. Comme il n&#x27;y a aucun moyen de limiter l&#x27;utilisation de la mémoire, si un conteneur dépasse sa limite de mémoire, il sera terminé. Si votre pod est géré par un Deployment, StatefulSet, DaemonSet ou un autre type de contrôleur, le contrôleur lance un remplacement.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Nodes&lt;&#x2F;em&gt;
Il est important de se rappeler que vous ne pouvez pas définir des demandes plus importantes que les ressources fournies par vos nodes. Par exemple, si vous avez un cluster de machines à deux cœurs, un Pod avec une demande de 2,5 cœurs ne sera jamais scheduler.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;service-discovery-env-dns&quot;&gt;Service Discovery (env, DNS)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Dans Kubernetes, la détection de services est mise en œuvre avec des noms de service générés automatiquement correspondant à l&#x27;adresse IP du service. Les noms de service suivent la spécification standard suivante: my-svc.my-namespace.svc.cluster-domain.example. Les pods peuvent également accéder à des services externes, tels que example.com, via leur nom. Pour en savoir plus sur le fonctionnement du DNS dans Kubernetes, consultez la page &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;dns&#x2F;blob&#x2F;master&#x2F;docs&#x2F;specification.md&quot;&gt;DNS pour les services et les pods&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Kubernetes fournit les options DNS de cluster suivantes pour résoudre les noms de service et les noms externes :&lt;&#x2F;p&gt;
&lt;p&gt;kube-dns: module complémentaire de cluster déployé par défaut.
Cloud DNS: infrastructure DNS de cluster gérée dans le cloud exploitant Cloud DNS et ne nécessitant pas la gestion des serveurs DNS dans les clusters, comme kube-dns.
Vous pouvez également enregistrer vos services dans l&#x27;annuaire des services pour votre cloud provider.&lt;&#x2F;p&gt;
&lt;p&gt;GKE fournit également le module complémentaire facultatif NodeLocal DNSCache pouvant être utilisé avec kube-dns ou Cloud DNS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;kube-dns&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;kube-dns est le fournisseur DNS par défaut des clusters&lt;&#x2F;strong&gt;. Il s&#x27;exécute comme un déploiement qui programme les pods kube-dns sur les nodes du cluster.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Cloud DNS&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloud DNS fournit la résolution DNS des pods et des services, sans nécessiter de fournisseur DNS hébergé par le cluster tel que kube-dns. Le contrôleur Cloud DNS provisionne automatiquement les enregistrements DNS des pods et des services dans Cloud DNS pour les adresses ClusterIP, les services sans adresse IP de cluster et les services de noms externes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;NodeLocal DNSCache&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;NodeLocal DNSCache s&#x27;exécute en tant que DaemonSet qui programme un pod de cache DNS sur chaque node de cluster. Ce cache DNS améliore la latence de la résolution DNS, harmonise les délais des résolutions DNS, et peut réduire le nombre de requêtes DNS adressées à kube-dns ou Cloud DNS.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h4 id=&quot;detection-de-services-en-dehors-d-un-cluster&quot;&gt;Détection de services en dehors d&#x27;un cluster&lt;&#x2F;h4&gt;
&lt;p&gt;Vous pouvez configurer la détection de services sur plusieurs clusters à l&#x27;aide de l&#x27;une des méthodes suivantes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;VPC Cloud DNS Scope&lt;&#x2F;em&gt;
Un cluster qui utilise Cloud DNS pour les services DNS de cluster doit s&#x27;exécuter dans l&#x27;un des deux modes disponibles: champ d&#x27;application de cluster ou champ d&#x27;application de cloud privé virtuel (VPC).&lt;&#x2F;p&gt;
&lt;p&gt;Lorsque vous configurez un cluster avec un champ d&#x27;application de cluster, les enregistrements DNS ne peuvent être résolus que dans le cluster à l&#x27;aide du schéma &lt;code&gt;&amp;lt;svc&amp;gt;.&amp;lt;ns&amp;gt;.svc.cluster.local&lt;&#x2F;code&gt;. &lt;strong&gt;Ce comportement est le même que celui de kube-dns&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Lorsque vous configurez un cluster avec un champ d&#x27;application de VPC, les enregistrements DNS des services du cluster peuvent être résolus dans l&#x27;ensemble du VPC. Cela signifie que les clients du même VPC ou connectés à celui-ci via Cloud VPN ou Cloud Interconnect peuvent résoudre directement les enregistrements DNS des services du cluster.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Services multiclusters&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Les services multiclusters fournissent la détection de services et l&#x27;équilibrage de charge multiclusters pour GKE qui exploite l&#x27;objet Service existant. Les services multiclusters sont visibles et accessibles sur n&#x27;importe quel cluster GKE doté d&#x27;une seule adresse IP virtuelle. Ce comportement est identique à celui d&#x27;un service ClusterIP accessible dans un seul cluster.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Les services multiclusters agrègent les services entre les clusters et les rendent adressables sous la forme d&#x27;un seul enregistrement DNS multicluster à l&#x27;aide du schéma &lt;code&gt;&amp;lt;svc&amp;gt;.&amp;lt;ns&amp;gt;.svc.clusterset.local&lt;&#x2F;code&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Sources&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloud.google.com&#x2F;kubernetes-engine&#x2F;docs&#x2F;concepts&#x2F;service-discovery#:%7E:text=In%20Kubernetes%2C%20service%20discovery%20is%20implemented%20with%20automatically,external%20services%20through%20their%20names%2C%20such%20as%20example.com.&quot;&gt;GKE Service Discovery&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;les-namespaces-et-les-quotas&quot;&gt;Les namespaces et les quotas&lt;&#x2F;h3&gt;
&lt;p&gt;Après avoir créé des namespaces, vous pouvez les verrouiller à l&#x27;aide de ResourceQuotas. Les quotas de ressources sont très puissants, mais voyons simplement comment les utiliser pour limiter l&#x27;utilisation des ressources CPU et mémoire.&lt;&#x2F;p&gt;
&lt;p&gt;Un quota de ressource peut ressembler à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResourceQuotas
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sample
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requests.cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;500m
  requests.memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;100Mib
  limits.cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;700m
  limits.memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;500Mib
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;En regardant cet exemple, vous pouvez voir qu&#x27;il y a quatre sections. La configuration de chacune de ces sections est facultative.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;requests.cpu&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nombre maximum de demandes combinées de CPU en millicores pour tous les conteneurs de le namespace. Dans l&#x27;exemple ci-dessus, vous pouvez avoir 50 conteneurs avec des demandes de 10m, cinq conteneurs avec des demandes de 100m, ou même un conteneur avec une demande de 500m. Tant que le total des demandes de CPU dans le namespace est inférieur à 500m !&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;requests.memory&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Demandes maximales combinées de mémoire pour tous les conteneurs dans le namespace. Dans l&#x27;exemple ci-dessus, vous pouvez avoir 50 conteneurs avec des demandes de 2MiB, cinq conteneurs avec des demandes de CPU de 20MiB, ou même un seul conteneur avec une demande de 100MiB. Tant que la mémoire totale demandée dans le namespace est inférieure à 100MiB !&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;limits.cpu&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Limites maximales combinées du CPU pour tous les conteneurs dans le namespace. C&#x27;est comme requests.cpu mais pour la limite.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;limits.memory&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Limites maximales de mémoire combinées pour tous les conteneurs dans le namespace. C&#x27;est comme requests.memory mais pour la limite.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Si vous utilisez un Namespace de production et de développement (par opposition à un Namespace par équipe ou service), un modèle commun est de ne pas mettre de quota sur le Namespace de production et des quotas stricts sur le Namespace de développement. Cela permet à la production de prendre toutes les ressources dont elle a besoin en cas de pic de trafic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;LimitRange&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vous pouvez également créer une LimitRange dans votre Namespace. Contrairement à un quota, qui concerne le namespace dans son ensemble, une LimitRange s&#x27;applique à un conteneur individuel. Cela peut aider à empêcher les gens de créer des conteneurs super petits ou super grands dans le namespace.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Une &lt;strong&gt;LimitRange&lt;&#x2F;strong&gt; peut ressembler à ceci :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LimitRange
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sample
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;600m
    memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;100Mib
  defaultRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;100Mib
    memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;50Mib
  max&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1000m
   memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;200Mib
  min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cpu&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;10m 
   memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;100Mib
  type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Container
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;En regardant cet exemple, vous pouvez voir qu&#x27;il y a quatre sections. Là encore, la définition de chacune de ces sections est facultative&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Section default&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;La section default définit les limites par défaut pour un conteneur dans un pod. Si vous définissez ces valeurs dans la section limitRange, tous les conteneurs qui ne les définissent pas explicitement se verront attribuer les valeurs par défaut.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Section defaultRequest&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;La section defaultRequest définit les demandes par défaut pour un conteneur dans un pod. Si vous définissez ces valeurs dans l&#x27;intervalle limitRange, les valeurs par défaut seront attribuées à tous les conteneurs qui ne les définissent pas explicitement.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Section max&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;La section max définit les limites maximales qu&#x27;un conteneur dans un pod peut fixer. La section par défaut ne peut être supérieure à cette valeur. De même, les limites définies pour un conteneur ne peuvent être supérieures à cette valeur. Il est important de noter que si cette valeur est définie et que la section par défaut ne l&#x27;est pas, tous les conteneurs qui ne définissent pas explicitement ces valeurs eux-mêmes se verront attribuer les valeurs max comme limite.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Section min&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;La section min définit les requêtes minimales qu&#x27;un conteneur dans un Pod peut définir. La section defaultRequest ne peut être inférieure à cette valeur. De même, les demandes définies sur un conteneur ne peuvent être inférieures à cette valeur. Il est important de noter que si cette valeur est définie et que la section defaultRequest ne l&#x27;est pas, la valeur min devient également la valeur defaultRequest.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;gestion-des-acces-rbac&quot;&gt;Gestion des accès (RBAC)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Le contrôle d&#x27;accès basé sur les rôles (RBAC) est une méthode de régulation de l&#x27;accès aux ressources informatiques ou réseau en fonction des rôles des utilisateurs individuels au sein de votre organisation.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;L&#x27;autorisation RBAC utilise le groupe d&#x27;API &lt;code&gt;rbac.authorization.k8s.io&lt;&#x2F;code&gt; pour piloter les décisions d&#x27;autorisation, ce qui vous permet de configurer dynamiquement les politiques via l&#x27;API Kubernetes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Pour activer RBAC, démarrez le serveur API avec l&#x27;indicateur &lt;code&gt;--authorization-mode&lt;&#x2F;code&gt; défini sur une liste séparée par des virgules qui inclut RBAC; par exemple:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kube-apiserver --authorization-mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=Example,RBAC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --other-options --more-options
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;L&#x27;API RBAC déclare quatre types d&#x27;objets Kubernetes: Role, ClusterRole, RoleBinding et ClusterRoleBinding&lt;&#x2F;strong&gt;. Vous pouvez décrire les objets, ou les modifier, à l&#x27;aide d&#x27;outils tels que kubectl, comme tout autre objet Kubernetes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Attention !&lt;&#x2F;em&gt; Ces objets, par conception, imposent des restrictions d&#x27;accès. Si vous apportez des modifications à un cluster au fur et à mesure de votre apprentissage, consultez la section Prévention de l&#x27;escalade des privilèges et amorçage pour comprendre comment ces restrictions peuvent vous empêcher d&#x27;effectuer certaines modifications.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Rôle et ClusterRole&lt;&#x2F;strong&gt;
Un rôle RBAC ou un ClusterRole contient des règles qui représentent un ensemble de permissions. Les permissions sont purement additives (il n&#x27;existe pas de règles de &amp;quot;refus&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;Un rôle définit toujours les permissions dans un espace de nom particulier; lorsque vous créez un rôle, vous devez spécifier le namespace auquel il appartient.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;ClusterRole&lt;&#x2F;strong&gt;, en revanche, est une ressource sans namespaces. Les ressources ont des noms différents (Role et ClusterRole) parce qu&#x27;un objet Kubernetes doit toujours être soit namespaced soit non namespaced; il ne peut pas être les deux.&lt;&#x2F;p&gt;
&lt;p&gt;Les ClusterRoles ont plusieurs usages. Vous pouvez utiliser un ClusterRole pour:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Définir des autorisations sur des ressources à espace de noms et les accorder au sein d&#x27;un ou de plusieurs espaces de noms individuels.&lt;&#x2F;li&gt;
&lt;li&gt;Définir des autorisations sur des ressources d&#x27;espace de noms et les accorder dans tous les espaces de noms&lt;&#x2F;li&gt;
&lt;li&gt;Définir des permissions sur des ressources à l&#x27;échelle du cluster&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Si vous souhaitez définir un rôle au sein d&#x27;un espace de noms, utilisez un Role ; si vous souhaitez définir un rôle à l&#x27;échelle du cluster, utilisez un ClusterRole.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Exemple de rôle&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Voici un exemple de rôle dans l&#x27;espace de nom &amp;quot;default&amp;quot; qui peut être utilisé pour accorder un accès en lecture aux pods:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Role
apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rbac.authorization.k8s.io&#x2F;v1
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pods-svc-reader
rules&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroups&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&amp;quot;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pods&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;verbs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Exemple de ClusterRole&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un ClusterRole peut être utilisée pour accorder les mêmes permissions qu&#x27;un rôle. Étant donné que les ClusterRoles sont adaptés aux clusters, vous pouvez également les utiliser pour accorder l&#x27;accès à:&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;des ressources à l&#x27;échelle du cluster (comme les nodes)&lt;&#x2F;li&gt;
&lt;li&gt;des points de terminaison non liés aux ressources (comme &#x2F;healthz sur un healthcheck)&lt;&#x2F;li&gt;
&lt;li&gt;des ressources namespaces (comme les pods), dans tous les namespaces.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Par exemple: vous pouvez utiliser une ClusterRole pour autoriser un utilisateur particulier à exécuter &lt;code&gt;kubectl get pods --all-namespaces&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Voici un exemple de ClusterRole qui peut être utilisé pour accorder un accès en lecture aux secrets dans un espace de noms particulier ou dans tous les espaces de noms (selon la façon dont il est lié) :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rbac.authorization.k8s.io&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterRole
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# &amp;quot;namespace&amp;quot; omitted since ClusterRoles are not namespaced
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;secret-reader
rules&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroups&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&amp;quot;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is &amp;quot;secrets&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resources&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;secrets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;verbs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;watch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Le nom d&#x27;un objet Role ou ClusterRole doit être un nom de segment de chemin valide.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;RoleBinding et ClusterRoleBinding&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un role binding accorde les permissions définies dans un rôle à un utilisateur ou à un ensemble d&#x27;utilisateurs. Il contient une liste de sujets (utilisateurs, groupes ou comptes de service) et une référence au rôle accordé. Un RoleBinding accorde des permissions dans un espace de nom spécifique, tandis qu&#x27;un ClusterRoleBinding accorde cet accès à l&#x27;échelle du cluster.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Un RoleBinding peut faire référence à n&#x27;importe quel rôle dans le même espace de noms. Par ailleurs, un RoleBinding peut faire référence à un ClusterRole et lier ce ClusterRole à l&#x27;espace de nom du RoleBinding. Si vous souhaitez lier un ClusterRole à tous les espaces de noms de votre cluster, vous utilisez un ClusterRoleBinding.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Le nom d&#x27;un objet RoleBinding ou ClusterRoleBinding doit être un nom de segment de chemin valide.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Exemples de RoleBinding&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Voici un exemple de RoleBinding qui accorde le rôle &amp;quot;pod-reader&amp;quot; à l&#x27;utilisateur &amp;quot;jane&amp;quot; dans l&#x27;espace de nom &amp;quot;default&amp;quot;. Ceci permet à &amp;quot;jane&amp;quot; de lire les pods dans l&#x27;espace de noms &amp;quot;default&amp;quot;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io&#x2F;v1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# This role binding allows &amp;quot;jane&amp;quot; to read pods in the &amp;quot;default&amp;quot; namespace.
# You need to already have a Role named &amp;quot;pod-reader&amp;quot; in that namespace.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RoleBinding
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;read-pods
  namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default
subjects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# You can specify more than one &amp;quot;subject&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;User
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;jane &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# &amp;quot;name&amp;quot; is case sensitive
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rbac.authorization.k8s.io
roleRef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# &amp;quot;roleRef&amp;quot; specifies the binding to a Role &#x2F; ClusterRole
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Role &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#this must be Role or ClusterRole
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pod-reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# this must match the name of the Role or ClusterRole you wish to bind to
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Un RoleBinding peut également faire référence à un ClusterRole pour accorder les permissions définies dans ce ClusterRole aux ressources de le namespace du RoleBinding. Ce type de référence vous permet de définir un ensemble de rôles communs à l&#x27;ensemble de votre cluster, puis de les réutiliser dans plusieurs namespaces.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple, même si le RoleBinding suivant fait référence à un ClusterRole, &amp;quot;dave&amp;quot; (le sujet, sensible à la casse) ne pourra lire que les Secrets dans l&#x27;espace de nom &amp;quot;development&amp;quot;, car le namespace du RoleBinding (dans ses métadonnées) est &amp;quot;development&amp;quot;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io&#x2F;v1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# This role binding allows &amp;quot;dave&amp;quot; to read secrets in the &amp;quot;development&amp;quot; namespace.
# You need to already have a ClusterRole named &amp;quot;secret-reader&amp;quot;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RoleBinding
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;read-secrets
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
  # The namespace of the RoleBinding determines where the permissions are granted.
  # This only grants permissions within the &amp;quot;development&amp;quot; namespace.
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;development
subjects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;User
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;dave &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Name is case sensitive
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rbac.authorization.k8s.io
roleRef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterRole
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;secret-reader
  apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;ClusterRoleBinding example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pour accorder des permissions à l&#x27;ensemble d&#x27;un cluster, vous pouvez utiliser un ClusterRoleBinding. Le ClusterRoleBinding suivant permet à tout utilisateur du groupe &amp;quot;manager&amp;quot; de lire les secrets dans n&#x27;importe quel namespace.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io&#x2F;v1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# This role binding allows &amp;quot;dave&amp;quot; to read secrets in the &amp;quot;development&amp;quot; namespace.
# You need to already have a ClusterRole named &amp;quot;secret-reader&amp;quot;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RoleBinding
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;read-secrets
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
  # The namespace of the RoleBinding determines where the permissions are granted.
  # This only grants permissions within the &amp;quot;development&amp;quot; namespace.
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;namespace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;development
subjects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;User
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;dave &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Name is case sensitive
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rbac.authorization.k8s.io
roleRef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterRole
  name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;secret-reader
  apiGroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rbac.authorization.k8s.io
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Après avoir créé un lien, vous ne pouvez pas modifier le rôle ou le ClusterRole auquel il fait référence. Si vous essayez de modifier le roleRef d&#x27;une liaison, vous obtenez une erreur de validation. Si vous souhaitez modifier le roleRef d&#x27;un binding, vous devez supprimer l&#x27;objet binding et en créer un autre.&lt;&#x2F;p&gt;
&lt;p&gt;Il y a deux raisons pour cette restriction:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rendre le roleRef immuable permet d&#x27;accorder à quelqu&#x27;un la permission de mettre à jour un objet de liaison existant, afin qu&#x27;il puisse gérer la liste des sujets, sans pouvoir changer le rôle qui est accordé à ces sujets.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;L&#x27;utilitaire de ligne de commande kubectl auth reconcile crée ou met à jour un fichier manifeste contenant les objets RBAC, et gère la suppression et la recréation des objets de liaison si nécessaire pour modifier le rôle auquel ils se réfèrent. Voir l&#x27;utilisation de la commande et les exemples pour plus d&#x27;informations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;haute-disponibilite-et-mode-maintenance&quot;&gt;Haute disponibilité et mode maintenance&lt;&#x2F;h3&gt;
&lt;p&gt;Cette page explique deux approches différentes pour configurer un Kubernetes à haute disponibilité. cluster utilisant kubeadm:&lt;&#x2F;p&gt;
&lt;p&gt;Avec des nodes de control plane empilés. Cette approche nécessite moins d&#x27;infrastructure. Les membres etcd et les nodes du control plane sont co-localisés.&lt;&#x2F;p&gt;
&lt;p&gt;Avec un cluster etcd externe cette approche nécessite plus d&#x27;infrastructure. Les nodes du control plane et les membres etcd sont séparés.&lt;&#x2F;p&gt;
&lt;p&gt;Avant de poursuivre, vous devez déterminer avec soin quelle approche répond le mieux aux besoins de vos applications et de l&#x27;environnement. Cette comparaison décrit les avantages et les inconvénients de chacune.&lt;&#x2F;p&gt;
&lt;p&gt;Vos clusters doivent exécuter Kubernetes version 1.12 ou ultérieure. Vous devriez aussi savoir que la mise en place de clusters HA avec kubeadm est toujours expérimentale et sera simplifiée davantage dans les futures versions. Vous pouvez par exemple rencontrer des problèmes lors de la mise à niveau de vos clusters. Nous vous encourageons à essayer l’une ou l’autre approche et à nous faire part de vos commentaires dans Suivi des problèmes Kubeadm.&lt;&#x2F;p&gt;
&lt;p&gt;Avertissement: Cette page ne traite pas de l&#x27;exécution de votre cluster sur un fournisseur de cloud. Dans un environnement Cloud, les approches documentées ici ne fonctionnent ni avec des objets de type load balancer, ni avec des volumes persistants dynamiques.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pre-requis&quot;&gt;Pré-requis&lt;&#x2F;h4&gt;
&lt;p&gt;Pour les deux méthodes, vous avez besoin de cette infrastructure:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Trois machines qui répondent aux pré-requis des exigences de kubeadm pour les maîtres (masters)&lt;&#x2F;li&gt;
&lt;li&gt;Trois machines qui répondent aux pré-requis des exigences de kubeadm pour les workers&lt;&#x2F;li&gt;
&lt;li&gt;Connectivité réseau complète entre toutes les machines du cluster (public ou réseau privé)&lt;&#x2F;li&gt;
&lt;li&gt;Privilèges sudo sur toutes les machines&lt;&#x2F;li&gt;
&lt;li&gt;Accès SSH d&#x27;une machine à tous les nodes du cluster&lt;&#x2F;li&gt;
&lt;li&gt;kubeadm et une kubelet installés sur toutes les machines. kubectl est optionnel.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Pour le cluster etcd externe uniquement, vous avez besoin également de:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Trois machines supplémentaires pour les membres etcd&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Les exemples suivants utilisent Calico en tant que fournisseur de réseau de Pod. Si vous utilisez un autre CNI, pensez à remplacer les valeurs par défaut si nécessaire.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Toutes les commandes d&#x27;un control plane ou d&#x27;un noeud etcd doivent être éxecutées en tant que root.
Certains plugins réseau CNI tels que Calico nécessitent un CIDR tel que 192.168.0.0 &#x2F; 16 et  certains comme Weave n&#x27;en ont pas besoin. Voir la Documentation du CNI réseau. &lt;&#x2F;p&gt;
&lt;p&gt;Pour ajouter un CIDR de pod, définissez le champ podSubnet: 192.168.0.0 &#x2F; 16 sous   l&#x27;objet networking de ClusterConfiguration.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;creez-un-load-balancer-pour-kube-apiserver&quot;&gt;Créez un load balancer pour kube-apiserver&lt;&#x2F;h5&gt;
&lt;p&gt;Note: Il existe de nombreuses configurations pour les équilibreurs de charge (load balancers). L&#x27;exemple suivant n&#x27;est qu&#x27;un exemple. Vos exigences pour votre cluster peuvent nécessiter une configuration différente.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Créez un load balancer kube-apiserver avec un nom résolu en DNS.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dans un environnement cloud, placez vos nodes du control plane derrière un load balancer TCP. Ce load balancer distribue le trafic à tous les nodes du control plane sains dans sa liste. La vérification de la bonne santé d&#x27;un apiserver est une vérification TCP sur le port que kube-apiserver écoute (valeur par défaut: 6443).&lt;&#x2F;p&gt;
&lt;p&gt;Il n&#x27;est pas recommandé d&#x27;utiliser une adresse IP directement dans un environnement cloud.&lt;&#x2F;p&gt;
&lt;p&gt;Le load balancer doit pouvoir communiquer avec tous les nodes du control plane sur le port apiserver. Il doit également autoriser le trafic entrant sur son réseau de port d&#x27;écoute.&lt;&#x2F;p&gt;
&lt;p&gt;HAProxy peut être utilisé comme load balancer.&lt;&#x2F;p&gt;
&lt;p&gt;Assurez-vous que l&#x27;adresse du load balancer correspond toujours à l&#x27;adresse de &lt;strong&gt;ControlPlaneEndpoint&lt;&#x2F;strong&gt; de kubeadm.&lt;&#x2F;p&gt;
&lt;p&gt;Ajoutez les premiers nodes du control plane au load balancer et testez la connexion:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nc -v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; LOAD_BALANCER_IP PORT
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Une erreur connection refused est attendue car l&#x27;apiserver n&#x27;est pas encore en fonctionnement. Cependant, un timeout signifie que le load balancer ne peut pas communiquer avec le node du control plane. Si un timeout survient, reconfigurez le load balancer pour communiquer avec le node du control plane.&lt;&#x2F;p&gt;
&lt;p&gt;Ajouter les nodes du control plane restants au groupe cible du load balancer.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;configurer-ssh&quot;&gt;Configurer SSH&lt;&#x2F;h5&gt;
&lt;p&gt;SSH est requis si vous souhaitez contrôler tous les nodes à partir d&#x27;une seule machine.&lt;&#x2F;p&gt;
&lt;p&gt;Activer ssh-agent sur votre machine ayant accès à tous les autres nodes du cluster:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;eval $(ssh-agent)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Ajoutez votre clé SSH à la session:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ssh-add ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.ssh&#x2F;path_to_private_key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SSH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; entre les nodes pour vérifier que la connexion fonctionne correctement.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lorsque vous faites un SSH sur un node, &lt;code&gt;assurez-vous d’ajouter l’option -A&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ssh -A 10.0.0.7&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Lorsque vous utilisez sudo sur n’importe quel node, veillez à préserver l’environnement afin que le SSH forwarding fonctionne:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sudo -E -s&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;control-plane-empile-et-nodes-etcd&quot;&gt;Control plane empilé et nodes etcd&lt;&#x2F;h4&gt;
&lt;p&gt;Sur le premier node du control plane, créez un fichier de configuration appelé &lt;strong&gt;kubeadm-config.yaml&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm.k8s.io&#x2F;v1beta1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterConfiguration
kubernetesVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stable
apiServer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;certSANs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LOAD_BALANCER_DNS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;controlPlaneEndpoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LOAD_BALANCER_DNS:LOAD_BALANCER_PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;kubernetesVersion doit représenter la version de Kubernetes à utiliser. Cet exemple utilise stable.
&lt;strong&gt;controlPlaneEndpoint&lt;&#x2F;strong&gt; doit correspondre à l&#x27;adresse ou au DNS et au port du load balancer.
Il est recommandé que les versions de kubeadm, kubelet, kubectl et kubernetes correspondent.&lt;&#x2F;p&gt;
&lt;p&gt;Assurez-vous que le node est dans un état sain puis exécuter:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sudo kubeadm init --config=kubeadm-config.yaml&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Vous pouvez à présent joindre n&#x27;importe quelle machine au cluster en lancant la commande suivante sur chaque nœeud en tant que root:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; join 192.168.0.200:6443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; j04n3m.octy8zely83cy2ts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --discovery-token-ca-cert-hash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    sha256:84938d2a22203a8e56a787ec0c6ddad7bc7dbd52ebabc62fd5f4dbea72b14d1f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Copiez ce jeton dans un fichier texte. Vous en aurez besoin plus tard pour joindre d’autres nodes du control plane au cluster.&lt;&#x2F;p&gt;
&lt;p&gt;Activez l&#x27;extension CNI Weave:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; version &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tr -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tapez ce qui suit et observez les pods des composants démarrer:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kube-system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -w
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Il est recommandé de ne joindre les nouveaux nodes du control plane qu&#x27;après l&#x27;initialisation du premier node.&lt;&#x2F;p&gt;
&lt;p&gt;Copiez les fichiers de certificat du premier node du control plane dans les autres:&lt;&#x2F;p&gt;
&lt;p&gt;Dans l&#x27;exemple suivant, remplacez &lt;strong&gt;CONTROL_PLANE_IPS&lt;&#x2F;strong&gt; par les adresses IP des autres nodes du control plane.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# customizable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE_IPS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;10.0.0.7 10.0.0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE_IPS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.key &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;sa.key &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;sa.pub &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;front-proxy-ca.crt &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;front-proxy-ca.key &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:etcd-ca.crt
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.key &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:etcd-ca.key
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;@$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Avertissement: N&#x27;utilisez que les certificats de la liste ci-dessus. kubeadm se chargera de générer le reste des certificats avec les SANs requis pour les instances du control plane qui se joignent. Si vous copiez tous les certificats par erreur, la création de noeuds supplémentaires pourrait échouer en raison d&#x27;un manque de SANs requis.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;etapes-pour-le-reste-des-nodes-du-control-plane&quot;&gt;Étapes pour le reste des nodes du control plane&lt;&#x2F;h5&gt;
&lt;p&gt;Déplacer les fichiers créés à l&#x27;étape précédente où scp était utilisé:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# customizable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;ca.crt &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;ca.key &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;sa.pub &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;sa.key &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;front-proxy-ca.crt &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;front-proxy-ca.key &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;etcd-ca.crt &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;etcd-ca.key &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.key
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;home&#x2F;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&#x2F;admin.conf &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ce processus écrit tous les fichiers demandés dans le dossier &lt;strong&gt;&#x2F;etc&#x2F;kubernetes&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Lancez kubeadm join sur ce node en utilisant la commande de join qui vous avait été précédemment donnée par kubeadm init sur le premier noeud. Ça devrait ressembler a quelque chose comme ça:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kubeadm join 192.168.0.200:6443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; j04n3m.octy8zely83cy2ts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --discovery-token-ca-cert-hash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; sha256:84938d2a22203a8e56a787ec0c6ddad7bc7dbd52ebabc62fd5f4dbea72b14d1f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --experimental-control-plane
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Remarquez l&#x27;ajout de l&#x27;option --experimental-control-plane. Ce paramètre automatise l&#x27;adhésion au control plane du cluster.
Tapez ce qui suit et observez les pods des composants démarrer:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kube-system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -w
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Répétez ces étapes pour le reste des nodes du control plane.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;noeuds-etcd-externes&quot;&gt;Noeuds etcd externes&lt;&#x2F;h5&gt;
&lt;h5 id=&quot;configurer-le-cluster-etcd&quot;&gt;Configurer le cluster etcd&lt;&#x2F;h5&gt;
&lt;p&gt;Suivez ces instructions pour configurer le cluster etcd.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Configurer le premier node du control plane&lt;&#x2F;li&gt;
&lt;li&gt;Copiez les fichiers suivants de n’importe quel node du cluster etcd vers ce node.:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu@10.0.0.7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;+scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;+scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;apiserver-etcd-client.crt &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;+scp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;apiserver-etcd-client.key &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CONTROL_PLANE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Remplacez la valeur de CONTROL_PLANE par l&#x27;utilisateur@hostname de cette machine.&lt;&#x2F;p&gt;
&lt;p&gt;Créez un fichier YAML appelé kubeadm-config.yaml avec le contenu suivant:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubeadm.k8s.io&#x2F;v1beta1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClusterConfiguration
kubernetesVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stable
apiServer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;certSANs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  - &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LOAD_BALANCER_DNS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;controlPlaneEndpoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LOAD_BALANCER_DNS:LOAD_BALANCER_PORT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;etcd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;endpoints&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;ETCD_0_IP:2379
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;ETCD_1_IP:2379
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;https:&#x2F;&#x2F;ETCD_2_IP:2379
        caFile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt
        certFile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;apiserver-etcd-client.crt
        keyFile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;apiserver-etcd-client.key
La différence entre etcd empilé et externe, c’est que nous utilisons le champ external pour etcd dans la configuration de kubeadm. Dans le cas de la topologie etcd empilée, c&amp;#39;est géré automatiquement.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Remplacez les variables suivantes dans le modèle (template) par les valeurs appropriées pour votre cluster:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LOAD_BALANCER_DNS
LOAD_BALANCER_PORT
ETCD_0_IP
ETCD_1_IP
ETCD_2_IP
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lancez &lt;code&gt;kubeadm init --config kubeadm-config.yaml&lt;&#x2F;code&gt; sur ce node.&lt;&#x2F;p&gt;
&lt;p&gt;Ecrivez le résultat de la commande de join dans un fichier texte pour une utilisation ultérieure.&lt;&#x2F;p&gt;
&lt;p&gt;Appliquer le plugin CNI Weave:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;net?k8s-version=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; version &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tr -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Étapes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; pour le reste des nodes du control plane
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pour&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ajouter le reste des nodes du control plane, suivez ces instructions. Les étapes sont les mêmes que pour la configuration etcd empilée, à l’exception du fait qu&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;un membre etcd local n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;est pas créé.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour résumer:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Assurez-vous que le premier node du control plane soit complètement initialisé.&lt;&#x2F;li&gt;
&lt;li&gt;Copier les certificats entre le premier node du control plane et les autres nodes du control plane.&lt;&#x2F;li&gt;
&lt;li&gt;Joignez chaque node du control plane à l&#x27;aide de la commande de join que vous avez enregistrée dans un fichier texte, puis ajoutez l&#x27;option --experimental-control-plane.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Tâches courantes après l&#x27;amorçage du control plane&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installer un réseau de pod
Suivez ces instructions afin d&#x27;installer le réseau de pod. Assurez-vous que cela correspond au pod CIDR que vous avez fourni dans le fichier de configuration principal.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Installer les workers
Chaque node worker peut maintenant être joint au cluster avec la commande renvoyée à partir du resultat de n’importe quelle commande kubeadm init. L&#x27;option --experimental-control-plane ne doit pas être ajouté aux nodes workers.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gestion-des-droits-user-sa-et-mise-en-place-de-services-exposes-tp&quot;&gt;Gestion des droits user, sa et mise en place de services exposés (TP)&lt;&#x2F;h3&gt;
&lt;p&gt;Dans ce TP vous aurez à charge de définir un ensemble de services de type clusterIP ou nodePort ainsi que la gestion des accès des pods. &lt;&#x2F;p&gt;
&lt;p&gt;Les pods derrière les services devront pouvoir être joints et listés dans l&#x27;ensemble du cluster pour un service account donné. Vous utiliserez pour cela un clusterRole et clusterRoleBinding.&lt;&#x2F;p&gt;
&lt;p&gt;2 services devront exposés un port sur le node, 2 autres devront permettre aux pods de communiquer entre eux à l&#x27;intérieur du cluster.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Introduction à kubernetes</title>
		<published>2022-01-01T08:00:00+00:00</published>
		<updated>2022-01-01T08:00:00+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-introduction/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/docs/index/kubernetes-introduction/</id>
		<content type="html">&lt;h2 id=&quot;introduction-a-kubernetes&quot;&gt;Introduction à kubernetes&lt;&#x2F;h2&gt;
&lt;p&gt;Kubernetes, souvent abrégé k8s, est un orchestrateur de conteneurs conçu par Google et sorti en 2014. C’est un outil Open Source (code source disponible sur github), écrit en Go, qui trouve ses racines dans Borg le système interne de Google qui gère l’infrastructure du géant de Mountain View.&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;borg.png&quot; alt=&quot;Borg&quot; width=&quot;720&quot; height=&quot;600&quot;&gt;
&lt;p&gt;Ce n’est pas le seul orchestrateur de conteneurs sur le marché, il en existe d’autres comme &lt;strong&gt;Docker Swarm&lt;&#x2F;strong&gt;, &lt;strong&gt;Apache Marathon&lt;&#x2F;strong&gt;, &lt;strong&gt;Nomad&lt;&#x2F;strong&gt; ou &lt;strong&gt;Kontena&lt;&#x2F;strong&gt;. Cependant, aujourd&#x27;hui K8s apparaît comme hégémonique sur le marché et ses concurrents ne se divisent que peu de parts.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Le nom Kubernetes tire son origine du grec ancien, signifiant capitaine ou pilote ou encore timonier et est la racine de gouverneur et cybernetic. K8s est l&#x27;abbréviation dérivée par le remplacement des 8 lettres &amp;quot;ubernete&amp;quot; par &amp;quot;8&amp;quot;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Soit celui qui tient la barre d’un bateau. Si l’on reprend l’analogie de Docker avec les conteneurs maritimes, Kubernetes est le capitaine qui dirige le porte-conteneurs.&lt;&#x2F;p&gt;
&lt;p&gt;Aujourd&#x27;hui, en 2022, force est de constater que Kubernetes est devenu incontournable et la plupart des cloud providers proposent désormais des solutions Kubernetes hébergées.&lt;&#x2F;p&gt;
&lt;p&gt;Il faudra attendre &lt;strong&gt;2013 pour que Google lance sa première offre IAAS&lt;&#x2F;strong&gt; en ayant été ralenti par l&#x27;échec de son PAAS AppEngine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Un des enjeux de K8S fut de réussir a mixer la flexibilité du IAAS et la facilité d&#x27;accès, la descriptabilité du PAAS, ce que l&#x27;on pourrait appeler l&#x27;IPAAS.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Il fallait donc un standard pour l&#x27;orchestration, une API qui puisse gérer l&#x27;ensemble de ces caractéristiques.&lt;&#x2F;p&gt;
&lt;p&gt;Kubernetes est strictement impératif, nous demandons un état sans avoir à connaître les étapes intermédiaires.&lt;&#x2F;p&gt;
&lt;p&gt;Par exemple:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;J&#x27;aimerai un espace isolé dont les applications n&#x27;utilisent que 4Go de RAM et 2 CPU&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;J&#x27;aimerai une base de données répliquée 2 fois&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;J&#x27;aimerai un storage avec une rétention de 6 mois&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;J&#x27;aimerai que des mises a jour soit déployées mais n&#x27;impactent que les applications du ns &#x27;web&#x27; ou correspondant au tag &#x27;web&#x27;&amp;quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Pour utiliser Kubernetes, vous utilisez les objets de l&#x27;API Kubernetes pour décrire l&#x27;état souhaité de votre cluster: quelles applications ou autres processus que vous souhaitez exécuter, quelles images de conteneur elles utilisent, le nombre de réplicas, les ressources réseau et disque que vous mettez à disposition, et plus encore. Vous définissez l&#x27;état souhaité en créant des objets à l&#x27;aide de l&#x27;API Kubernetes, généralement via l&#x27;interface en ligne de commande, kubectl. Vous pouvez également utiliser l&#x27;API Kubernetes directement pour interagir avec le cluster et définir ou modifier l&#x27;état souhaité.&lt;&#x2F;p&gt;
&lt;p&gt;Une fois que vous avez défini l&#x27;état souhaité, le plan de contrôle Kubernetes (control plane en anglais) permet de faire en sorte que l&#x27;état actuel du cluster corresponde à l&#x27;état souhaité. Pour ce faire, Kubernetes effectue automatiquement diverses tâches, telles que le démarrage ou le redémarrage de conteneurs, la mise à jour du nombre de réplicas d&#x27;une application donnée, etc.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;L’orchestration est gérée par des contrôleurs&lt;&#x2F;strong&gt;. Ces contrôleurs sont compilés dans le kube-controller-manager.&lt;&#x2F;p&gt;
&lt;p&gt;Kubernetes est container-centric et va nous permettre de déployer et de gérer des conteneurs. Les conteneurs ne sont pas gérés individuellement. Au lieu de cela ils font partie d’un ensemble plus grand appelé &lt;strong&gt;Pod&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un Pod se compose d’un ou de plusieurs conteneurs qui partagent une adresse IP, un accès au stockage et un espace de nommage.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;On va distinguer la notion de spec de la notion de statut.&lt;&#x2F;p&gt;
&lt;p&gt;S&#x27;il réussi a converger à l&#x27;issue de sa boucle de réconciliation, l&#x27;état est appliqué et le résultat retourné à l&#x27;api server.&lt;&#x2F;p&gt;
&lt;p&gt;Il était très compliqué d&#x27;atteindre l&#x27;indempotence avec Puppet ou Chef par exemple, car outre l&#x27;effet snowflake, certains composants tel le réseau on-premise, n&#x27;étaient pas prévus pour être indompotents.&lt;&#x2F;p&gt;
&lt;p&gt;Deux machines, 2 versions ne vont pas nécessairement réagir de la même façon. C&#x27;est l&#x27;effet snowflake car tous les flocons se ressemblent et il devient presque impossible distinguer&#x2F;troubleshooter les différences sur des milliers de machines de production.&lt;&#x2F;p&gt;
&lt;p&gt;Kubernetes répond a ce problème car il maintient l&#x27;état et le retourne après action. On a donc un &lt;em&gt;avant&lt;&#x2F;em&gt; et un &lt;em&gt;après&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Les pratiques de Kube sont basées sur Google mais également sur beaucoup d&#x27;autres suggestions de la communauté.&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;organe de certification de la CNCF permet d&#x27;assurer que toutes les solutions qui sont vendues sont compatibles.&lt;&#x2F;p&gt;
&lt;p&gt;On a un cluster ETCD qui sert a la persistence de l&#x27;état. &lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;API server est en somme un &amp;quot;gardien du temple&amp;quot; qui s&#x27;assure de la validité des requêtes émises.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;de-la-virtualisation-a-la-conteneurisation&quot;&gt;De la virtualisation à la conteneurisation&lt;&#x2F;h3&gt;
&lt;p&gt;L&#x27;ancienne façon (old way) de déployer des applications consistait à installer les applications sur un hôte en utilisant les systèmes de gestions de paquets natifs. Cela avait pour principale inconvénient de lier fortement les exécutables, la configuration, les librairies et le cycle de vie de chacun avec l&#x27;OS. Il est bien entendu possible de construire une image de machine virtuelle (VM) immuable pour arriver à produire des publications (rollouts) ou retours arrières (rollbacks), mais les VMs sont lourdes et non-portables.&lt;&#x2F;p&gt;
&lt;p&gt;La nouvelle façon (new way) consiste à déployer des conteneurs basés sur une virtualisation au niveau du système d&#x27;opération (operation-system-level) plutôt que de la virtualisation hardware. Ces conteneurs sont isolés les uns des autres et de l&#x27;hôte : ils ont leurs propres systèmes de fichiers, ne peuvent voir que leurs propres processus et leur usage des ressources peut être contraint. Ils sont aussi plus faciles à construire que des VMs, et vu qu&#x27;ils sont décorrélés de l&#x27;infrastructure sous-jacente et du système de fichiers de l&#x27;hôte, ils sont aussi portables entre les différents fournisseurs de Cloud et les OS.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solutions-d-installation-minikube-on-premise-etc&quot;&gt;Solutions d&#x27;installation (MiniKube, On-Premise, etc.)&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;k8s-certified-providers&quot;&gt;K8S certified providers&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;unofficial-kubernetes.readthedocs.io&#x2F;en&#x2F;latest&#x2F;setup&#x2F;pick-right-solution&quot;&gt;Marketplace Solutions&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;training&#x2F;&quot;&gt;Kubernetes Training Partners&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;ccnf-landscape.jpg&quot; alt=&quot;CCNF Landscape&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;K8s-mise-en-oeuvre.github.io&#x2F;docs&#x2F;landscape-kuber-min-1.jpg
&quot; alt=&quot;CCNF Landscape 2&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;&lt;&#x2F;p&gt;
&lt;h5 id=&quot;managed-solutions&quot;&gt;Managed Solutions&lt;&#x2F;h5&gt;
&lt;p&gt;Quelques solutions parmi les plus représentées: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GCP GKE&lt;&#x2F;li&gt;
&lt;li&gt;AWS EKS&lt;&#x2F;li&gt;
&lt;li&gt;Azure AKS&lt;&#x2F;li&gt;
&lt;li&gt;Platform9 (KUBE2GO)&lt;&#x2F;li&gt;
&lt;li&gt;Pivotal&lt;&#x2F;li&gt;
&lt;li&gt;Rancher&lt;&#x2F;li&gt;
&lt;li&gt;Tectonic by CoreOS&lt;&#x2F;li&gt;
&lt;li&gt;Stackpoint.io&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h5 id=&quot;le-cas-ovh-implementation-d-offre-kaas-basee-sur-openstack-et-platform9-solution&quot;&gt;Le cas OVH: implémentation d&#x27;offre KAAS basée sur OpenStack et Platform9 solution&lt;&#x2F;h5&gt;
&lt;p&gt;Dans le cadre de la Kubecon 2019, OVH annonce le déploiement de Kubernetes sur ses serveurs dédiés suite à un partenariat avec &lt;strong&gt;Platform9&lt;&#x2F;strong&gt;. Par conséquent, il est désormais le fournisseur européen qui propose le choix le plus diversifié en matière de déploiement Kubernetes.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;le-cas-bare-metal&quot;&gt;Le cas Bare-metal&lt;&#x2F;h5&gt;
&lt;p&gt;En bare-metal l&#x27;expérience montre qu&#x27;avec CoreOs racheté par Redhat et intégré a Openshift, cette solution ainsi que Pivotal et Rancher sont les plus représentées sur le marché français.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;solutions-locales&quot;&gt;Solutions locales&lt;&#x2F;h4&gt;
&lt;h5 id=&quot;kind-kubernetes-dans-docker&quot;&gt;kind: Kubernetes dans Docker&lt;&#x2F;h5&gt;
&lt;p&gt;Sous licence Apache, le projet kind (« Kubernetes in Docker») est un peu différent. Il déploie les nodes sous forme de conteneurs – chaque cluster étant identifié par une étiquette Docker. Son usage est donc plutôt orienté sur le test que le développement.&lt;&#x2F;p&gt;
&lt;p&gt;Le cœur fonctionnel est codé en Go. L’installation de base se fonde sur une image minimale d’Ubuntu. Elle contient les outils statiques nécessaires à Kubernetes, ajoute un point d’entrée sur chaque nœud pour réaliser des actions avant l’amorçage et paramètre un service systemd pour gérer la journalisation. Il en existe des variantes « étendues », contenant des tarballs (archives d’images) que le cluster chargera avant d’exécuter kubeadm.&lt;&#x2F;p&gt;
&lt;p&gt;L’installation est nettement plus lourde qu’avec les options sus-évoquées. Sur Mac comme sur Windows, il faut au minimum 6 Go de RAM (8 recommandés) pour la VM Docker. Il n’existe pas encore d’images Arm.&lt;&#x2F;p&gt;
&lt;p&gt;Parmi les autres limites, kind ne gère pas les applications à état. Il ne fonctionne par ailleurs pas dans la sandbox Linux de Chrome OS et ne prend pas en charge les conteneurs Windows. Depuis peu, il permet d’utiliser, côté hôte, docker et podman en rootless. L’implémentation réseau par défaut repose sur un module propre au projet (kindnetd). Associable à MetalLB pour la répartition de charge, il supporte l’IPv6, y compris en mode dual-stack.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;minikube-et-microk8&quot;&gt;Minikube et MicroK8&lt;&#x2F;h5&gt;
&lt;p&gt;Pas encore d’IPv6 sur Minikube, le « Kubernetes light officiel ». Sa première release remonte à 2016. Il couvre aujourd’hui Windows, Mac et Linux, sur x86-64. Son principe : exécuter des clusters à nœud unique dans une VM. Ses exigences : au minimum 2 CPU, 2 Go de RAM et 20 Go de disque. On peut aussi l’utiliser en remplacement de Docker Desktop, sans lancer Kubernetes.&lt;&#x2F;p&gt;
&lt;p&gt;Comme k0s, MicroK8s (AMD64, ARM64) peut faire l’objet d’un support commercial – 10 ans de maintenance – par son éditeur. Au-delà du développement local, il cible l’IoT et les environnements minimaux d’intégration continue. Canonical le distribue sous forme de Snap (et d’exécutable sur Windows) qui exécute nativement l’orchestrateur (sans VM).&lt;&#x2F;p&gt;
&lt;p&gt;De base, MicroK8s inclut le serveur d’API, le planificateur, le kubelet, l’interface CNI et kube-proxy. On peut l’étendre avec une trentaine d’add-on dont Istio, Kubeflow, OpenFaaS, Prometheus et l’opérateur NVIDIA. Configuration minimale recommandée: 4 Go de RAM et 20 Go de disque sur Linux avec l’installation par défaut (40 Go de disque sur Windows et Mac). Autre possibilité: installer MicroK8s dans un conteneur LXD. Comme Minikube, on est sur du déploiement de clusters à un seul nœud. Mais il est possible d’en ajouter et d’activer la haute disponibilité – avec DQlite en datastore.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installation-et-configuration-de-docker&quot;&gt;Installation et configuration de docker&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Ce guide part du postulat que les machines clientes pour cette formation qui seront amenées a utiliser un runtime docker tournent sous Windows, tandis que les outils seront installés dans un container linux.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;installation de docker réfèrera donc au docker-desktop.&lt;&#x2F;p&gt;
&lt;p&gt;Cliquez sur le lient de téléchargement ci-dessous et suivez les étapes mentionnées: &lt;a href=&quot;https:&#x2F;&#x2F;desktop.docker.com&#x2F;win&#x2F;main&#x2F;amd64&#x2F;Docker%20Desktop%20Installer.exe&quot;&gt;Install Docker Desktop&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;acceder-au-cluster-kubernetes-cli-kubectl-gui-dashboard-et-apis&quot;&gt;Accéder au cluster Kubernetes: CLI (kubectl), GUI (dashboard) et APIs&lt;&#x2F;h3&gt;
&lt;p&gt;Pour accéder au cluster nous aurons besoin de récupérer au préalable le &lt;strong&gt;KUBECONFIG&lt;&#x2F;strong&gt; de celui-ci. La récupération des données propres a générer, reconstruire ou accéder à un kubeconfig existant dépendra de la solution via laquelle le cluster a été déployé.&lt;&#x2F;p&gt;
&lt;p&gt;Voici un ensemble d&#x27;outils nécessaires sinon indispensables à une utilisation de Kubernetes en ligne de commande: &lt;&#x2F;p&gt;
&lt;h4 id=&quot;kubectl&quot;&gt;Kubectl&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;code&gt;kubectl&lt;&#x2F;code&gt; est le client CLI écrit en go pour Kubernetes. &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -LO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -L -s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;stable.txt)&#x2F;bin&#x2F;linux&#x2F;amd64&#x2F;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Valider le téléchargement du binaire via la checksum:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -LO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;dl.k8s.io&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -L -s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;stable.txt)&#x2F;bin&#x2F;linux&#x2F;amd64&#x2F;kubectl.sha256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;kubectl.sha256)  kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256sum --check
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si la vérification est conforme:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; OK
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si la vérification échoue, sha256 se termine avec un statut non nul et imprime une sortie similaire à:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; FAILED
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sha256sum:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; WARNING: 1 computed checksum did NOT match
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Installer kubectl:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; root&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; root&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; 0755 kubectl &#x2F;usr&#x2F;local&#x2F;bin&#x2F;kubectl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Si vous n&#x27;avez pas l&#x27;accès root sur le système cible, vous pouvez quand même installer kubectl dans le répertoire &lt;em&gt;~&#x2F;.local&#x2F;bin&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;chmod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; +x kubectl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.local&#x2F;bin&#x2F;kubectl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; .&#x2F;kubectl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.local&#x2F;bin&#x2F;kubectl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# and then add ~&#x2F;.local&#x2F;bin&#x2F;kubectl to $PATH
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Vérifier l&#x27;installation:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --client
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;krew-plugin-manager-for-kubernetes&quot;&gt;Krew, plugin manager for Kubernetes&lt;&#x2F;h4&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mktemp -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;[:upper:]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;[:lower:]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ARCH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed -e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;s&#x2F;x86_64&#x2F;amd64&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;s&#x2F;\(arm\)\(64\)\?.*&#x2F;\1\2&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;s&#x2F;aarch64$&#x2F;arm64&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KREW&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;krew-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ARCH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -fsSLO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;kubernetes-sigs&#x2F;krew&#x2F;releases&#x2F;latest&#x2F;download&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KREW&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; zxvf &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KREW&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;amp;&amp;amp;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KREW&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; install krew
)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;EOF &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.bashrc 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;export PATH=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;KREW_ROOT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:-$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;.krew}&#x2F;bin:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;
EOF&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#bf616a;color:#2b303b;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;kubectx-kubens&quot;&gt;Kubectx + Kubens&lt;&#x2F;h4&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; krew install ctx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; krew install ns
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;konfig&quot;&gt;Konfig&lt;&#x2F;h4&gt;
&lt;p&gt;Le plugin konfig va nous servir a exporter une configuration cluster présente dans un fichier de structure kubeconfig et le copier dans &lt;em&gt;~&#x2F;.kube&#x2F;config&lt;&#x2F;em&gt;. De cette façon, les binaires kubectx ou kubie auront accès au contexte et nous pourrons ainsi passer d&#x27;un contexte à l&#x27;autre sans jamais passer la variable d&#x27;environnment &lt;strong&gt;KUBECONFIG&lt;&#x2F;strong&gt;. &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; krew install konfig
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;konfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; import &#x2F;tmp&#x2F;custom-cluster-KuBeConFig
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;konfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; import&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; &#x2F;tmp&#x2F;custom-cluster-KuBeConFig
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubie&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ctx custom-cluster
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get po&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -A
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;kubie&quot;&gt;Kubie&lt;&#x2F;h4&gt;
&lt;p&gt;Réunit les commandes &lt;code&gt;kubectx&lt;&#x2F;code&gt; + &lt;code&gt;kubens&lt;&#x2F;code&gt; dans un seul binaire (et peut permettre par exemple d&#x27;exécuter des commandes extérieures au contexte kube actuel).&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -sS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;github.com&#x2F;sbstp&#x2F;kubie&#x2F;releases&#x2F;download&#x2F;v0.16.0&#x2F;kubie-linux-amd64 | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash
chmod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; +x kubie-linux-amd64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; kubie-linux-amd64 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;kubie
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Quelques exemples concernant l&#x27;utilisation de Kubie:&lt;&#x2F;p&gt;
&lt;p&gt;Changer de contexte courant:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubie&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ctx kolo@kolorado.us-east-2.eksctl.io
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Afficher les namespaces du contexte courant:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubie&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ns
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Exécuter une commande kubectl sur un contexte accessible:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubie&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; exec kolo@kolorado.us-east-2.eksctl.io kube-system kubectl get pods
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;k9s&quot;&gt;K9s&lt;&#x2F;h4&gt;
&lt;p&gt;Visualiseur en shell console pour Kubernetes:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -sS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;webinstall.dev&#x2F;k9s | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;export PATH=&amp;#39;&#x2F;home&#x2F;pbackz&#x2F;.local&#x2F;bin:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.bashrc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# List all available CLI options
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;k9s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; help
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# To get info about K9s runtime (logs, configs, etc..)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;k9s info
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# To run K9s in a given namespace
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;k9s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; mycoolns
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start K9s in an existing KubeConfig context
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;k9s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; coolCtx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start K9s in readonly mode - with all cluster modification commands disabled
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;k9s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --readonly
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h4 id=&quot;gui&quot;&gt;GUI&lt;&#x2F;h4&gt;
&lt;p&gt;Kubernetes fournit nativement des dashboards.&lt;&#x2F;p&gt;
&lt;p&gt;Cependant, l&#x27;interface utilisateur du tableau de bord n&#x27;est pas déployée par défaut. Pour la déployer, exécutez la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;master&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pour protéger vos données dans le cluster, le tableau de bord se déploie avec une configuration RBAC minimale par défaut. Actuellement, le tableau de bord prend uniquement en charge la connexion avec un token de support. &lt;&#x2F;p&gt;
&lt;p&gt;Vous pouvez accéder au tableau de bord à l&#x27;aide de la commande suivante:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; proxy
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Kubectl mettra le tableau de bord à disposition à l&#x27;adresse suivante: http:&#x2F;&#x2F;localhost:8001&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kubernetes-dashboard&#x2F;services&#x2F;https:kubernetes-dashboard:&#x2F;proxy&#x2F;.&lt;&#x2F;p&gt;
&lt;p&gt;Vous ne pouvez accéder à l&#x27;interface utilisateur que depuis la machine sur laquelle la commande est exécutée. Voir kubectl &lt;code&gt;proxy --help&lt;&#x2F;code&gt; pour plus d&#x27;options.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; La méthode d&#x27;authentification Kubeconfig ne prend pas en charge les fournisseurs d&#x27;identité externes ni l&#x27;authentification basée sur un certificat x509. &lt;&#x2F;p&gt;
&lt;p&gt;Nous y préférerons aujourd&#x27;hui l&#x27;outil Kubernetes Lens (https:&#x2F;&#x2F;k8slens.dev&#x2F;), disposant de plus de fonctionnalités.&lt;&#x2F;p&gt;
&lt;img src=&quot;k8s-lens.png&quot; alt=&quot;k8s-lens&quot; width=&quot;900&quot; height=&quot;720&quot;&gt;
&lt;h4 id=&quot;apis&quot;&gt;APIs&lt;&#x2F;h4&gt;
&lt;p&gt;De nombreux sdks conçus pour la majorité des langages permettent également d&#x27;accéder à un cluster Kubernetes, d&#x27;en visualiser, lister ou manipuler les ressources via des apis.&lt;&#x2F;p&gt;
&lt;p&gt;Toutefois, nous ne saurions que trop conseiller l&#x27;utilisation du langage Golang dans lequel Kubernetes est écrit pour manipuler ces APIs ou créer des opérateurs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;deploiement-publication-manuelle-et-introspection-du-deploiement&quot;&gt;Déploiement, publication manuelle et introspection du deploiement&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Un Deployment fournit des mises à jour déclaratives pour Pods et ReplicaSets.
Vous décrivez un état désiré dans un déploiement et le controlleur déploiement change l&#x27;état réel à l&#x27;état souhaité à un rythme contrôlé. Vous pouvez définir des Deployments pour créer de nouveaux ReplicaSets, ou pour supprimer des déploiements existants et adopter toutes leurs ressources avec de nouveaux déploiements.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Voici un exemple de déploiement. Il crée un ReplicaSet pour faire apparaître trois pods nginx:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apiVersion&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apps&#x2F;v1
kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Deployment
metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment
  labels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;replicas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;matchLabels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
  template&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;labels&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
    spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx
        image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx:1.7.9
        ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;:
        - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;containerPort&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dans cet exemple:&lt;&#x2F;p&gt;
&lt;p&gt;Un déploiement nommé nginx-deployment est créé, indiqué par le champ &lt;strong&gt;.metadata.name&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Le déploiement crée trois pods répliqués, indiqués par le champ replicas.&lt;&#x2F;p&gt;
&lt;p&gt;Le champ selector définit comment le déploiement trouve les pods à gérer. Dans ce cas, vous sélectionnez simplement un label définie dans le template de pod (app:nginx). Cependant, des règles de sélection plus sophistiquées sont possibles, tant que le modèle de pod satisfait lui-même la règle.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Le champ matchLabels est une table de hash {clé, valeur}. Une seule {clé, valeur} dans la table matchLabels est équivalente à un élément de matchExpressions, dont le champ clé est &amp;quot;clé&amp;quot;, l&#x27;opérateur est &amp;quot;In&amp;quot; et le tableau de valeurs contient uniquement &amp;quot;valeur&amp;quot;. Toutes les exigences, à la fois de matchLabels et de matchExpressions, doivent être satisfaites pour correspondre.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Les Pods reçoivent le label &lt;strong&gt;app:nginx&lt;&#x2F;strong&gt; dans le champ labels.&lt;&#x2F;p&gt;
&lt;p&gt;La spécification du template de pod dans le champ &lt;strong&gt;.template.spec&lt;&#x2F;strong&gt;, indique que les pods exécutent un conteneur, nginx, qui utilise l&#x27;image nginx Docker Hub à la version 1.7.9.&lt;&#x2F;p&gt;
&lt;p&gt;Créez un conteneur et nommez-le nginx en utilisant le champ &lt;strong&gt;name&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Créez le déploiement en exécutant la commande suivante:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Vous pouvez spécifier l&#x27;indicateur &lt;strong&gt;--record&lt;&#x2F;strong&gt; pour écrire la commande exécutée dans l&#x27;annotation de ressource kubernetes.io&#x2F;change-cause. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;C&#x27;est utile pour une future introspection. Par exemple, pour voir les commandes exécutées dans chaque révision de déploiement.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; https:&#x2F;&#x2F;k8s.io&#x2F;examples&#x2F;controllers&#x2F;nginx-deployment.yaml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Exécutez &lt;code&gt;kubectl get deployments&lt;&#x2F;code&gt; pour vérifier si le déploiement a été créé. &lt;&#x2F;p&gt;
&lt;p&gt;Si le déploiement est toujours en cours de création, la sortie est similaire à:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               READY   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   0&#x2F;3     0            0           1s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lorsque vous inspectez les déploiements de votre cluster, les champs suivants s&#x27;affichent:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAME&lt;&#x2F;strong&gt; - répertorie les noms des déploiements dans le cluster.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DESIRED&lt;&#x2F;strong&gt; - affiche le nombre souhaité de répliques de l&#x27;application, que vous définissez lorsque vous créez le déploiement. C&#x27;est l&#x27;état désiré.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CURRENT&lt;&#x2F;strong&gt; - affiche le nombre de réplicas en cours d&#x27;exécution.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UP-TO-DATE&lt;&#x2F;strong&gt; - affiche le nombre de réplicas qui ont été mises à jour pour atteindre l&#x27;état souhaité.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AVAILABLE&lt;&#x2F;strong&gt; - affiche le nombre de réplicas de l&#x27;application disponibles pour vos utilisateurs.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AGE&lt;&#x2F;strong&gt; - affiche la durée d&#x27;exécution de l&#x27;application.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Notez que le nombre de réplicas souhaitées est de 3 selon le champ &lt;strong&gt;.spec.replicas&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pour voir l&#x27;état du déploiement, exécutez:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; rollout status deployment.v1.apps&#x2F;nginx-deployment

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Waiting&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; for rollout to finish: 2 out of 3 new replicas have been updated...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deployment &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; successfully rolled out
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Exécutez à nouveau kubectl get deployments quelques secondes plus tard. La sortie est similaire à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;               READY   UP-TO-DATE   AVAILABLE   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   3&#x2F;3     3            3           18s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notez que le déploiement a créé les trois répliques et que toutes les répliques sont à jour (elles contiennent le dernier modèle de pod) et disponibles.&lt;&#x2F;p&gt;
&lt;p&gt;Pour voir le ReplicaSet (&lt;strong&gt;rs&lt;&#x2F;strong&gt;) créé par le déploiement, exécutez &lt;code&gt;kubectl get rs&lt;&#x2F;code&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;La sortie est similaire à ceci:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                          DESIRED   CURRENT   READY   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-75675f5897&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   3         3         3       18s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Notez que le nom du ReplicaSet est toujours formaté comme ceci: &amp;quot;[DEPLOYMENT-NAME]-[RANDOM-STRING]&amp;quot;.&lt;&#x2F;strong&gt; &lt;&#x2F;p&gt;
&lt;p&gt;La chaîne aléatoire est générée aléatoirement et utilise le pod-template-hash.&lt;&#x2F;p&gt;
&lt;p&gt;Pour voir les labels générées automatiquement pour chaque Pod, exécutez: &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;kubectl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; get pods&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --show-labels

NAME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                                READY     STATUS    RESTARTS   AGE       LABELS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-75675f5897-7ci7o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          18s       app=nginx,pod-template-hash=3123191453
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-75675f5897-kzszj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          18s       app=nginx,pod-template-hash=3123191453
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nginx-deployment-75675f5897-qqcnn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;   1&#x2F;1       Running   0          18s       app=nginx,pod-template-hash=3123191453
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Le ReplicaSet créé garantit qu&#x27;il y a trois pods nginx.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;N.B.&lt;&#x2F;em&gt; Vous devez spécifier un sélecteur approprié et des labels de template de pod dans un déploiement (dans ce cas, app: nginx). Ne superposez pas les étiquettes ou les sélecteurs avec d&#x27;autres contrôleurs (y compris d&#x27;autres déploiements et StatefulSets). Kubernetes n&#x27;empêche pas les chevauchements de noms, et si plusieurs contrôleurs ont des sélecteurs qui se chevauchent, ces contrôleurs peuvent entrer en conflit et se comporter de façon inattendue. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;deploiement-d-une-plateforme-de-test-tp&quot;&gt;Déploiement d&#x27;une plateforme de test (TP)&lt;&#x2F;h3&gt;
&lt;p&gt;Dans ce TP vous devrez mettre en place une plateforme de test locale via l&#x27;une des solutions suivantes: Minikube, Kind, MicroK8S ou encore Docker Desktop.&lt;&#x2F;p&gt;
&lt;p&gt;Vous créérez un fichier &lt;em&gt;deployment.yaml&lt;&#x2F;em&gt; contenant la spec souhaitée puis exécuter la commande &lt;code&gt;kubectl apply -f deployment.yaml&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Vous devrez créer des pods disposant d&#x27;un label &#x27;test&#x27;.&lt;&#x2F;p&gt;
&lt;p&gt;Vous devrez pouvoir lister les pods ainsi que leurs labels et accéder au fichier de configuration du cluster (kubeconfig).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="fr">
		<title>Authors</title>
		<published>2021-12-09T13:49:54+00:00</published>
		<updated>2021-12-09T13:49:54+00:00</updated>
		<link href="https://K8s-mise-en-oeuvre.github.io/authors/pierre-baconnier/" type="text/html"/>
		<id>https://K8s-mise-en-oeuvre.github.io/authors/pierre-baconnier/</id>
		<content type="html">&lt;p&gt;Creator of https:&#x2F;&#x2F;k8s-mise-en-oeuvre.github.io&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;k8s-mise-en-oeuvre&quot;&gt;@k8s-mise-en-oeuvre&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
